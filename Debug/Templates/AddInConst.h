/* ------------------------------------
Chromatic AddIns constants and structures
C version
------------------------------------
Version: 2.0
------------------------------------
(C) Copyright 2001-2010 Franck Charlet.
------------------------------------ */

#ifndef _ADDINCONST_H_
#define _ADDINCONST_H_

/* --- Support constants for Windows.inc */
#ifndef TBSTYLE_DROPDOWN
#define TBSTYLE_DROPDOWN 8
#endif
#ifndef TBSTYLE_EX_DRAWDDARROWS
#define TBSTYLE_EX_DRAWDDARROWS 1
#endif
#ifndef TBN_DROPDOWN
#define TBN_DROPDOWN (TBN_FIRST - 10)
#endif

/* --- Library constants */
#define CHROMATICLIB_VERSION 0x106

#define SPLITTER_HORZ 1
#define SPLITTER_VERT 2

#define MSG_SPLITTER_RESIZED WM_USER + 100
#define MSG_COLORBOX_CLICKED WM_USER + 101
#define MSG_SPLASH_PAINT WM_USER + 102

#define STATUSBAR_PARTSUNKEN 2
#define STATUSBAR_PARTNORMAL 4
#define STATUSBAR_PARTRAISED 8
#define STATUSBAR_PARTOWNER 16

#define DUMPBOX_LINELEFT WM_USER + 201
#define DUMPBOX_LINERIGHT WM_USER + 202
#define DUMPBOX_PAGELEFT WM_USER + 203
#define DUMPBOX_PAGERIGHT WM_USER + 204
#define DUMPBOX_LINEUP WM_USER + 205
#define DUMPBOX_LINEDOWN WM_USER + 206
#define DUMPBOX_PAGEUP WM_USER + 207
#define DUMPBOX_PAGEDOWN WM_USER + 208
#define DUMPBOX_POSITIONLEFTRIGHT WM_USER + 209
#define DUMPBOX_POSITIONUPDOWN WM_USER + 210
#define DUMPBOX_TRACKLEFTRIGHT WM_USER + 211
#define DUMPBOX_TRACKUPDOWN WM_USER + 212
#define DUMPBOX_TOP WM_USER + 213
#define DUMPBOX_BOTTOM WM_USER + 214
#define DUMPBOX_LEFT WM_USER + 215
#define DUMPBOX_RIGHT WM_USER + 216

#define CHILD_MSG_CREATED WM_USER + 217
#define CHILD_MSG_DESTROYED WM_USER + 218
#define CHILD_MSG_SETTITLE WM_USER + 219

#define GRIPBOX_MSG_ASKSIZE WM_USER + 220
#define GRIPBOX_MSG_ASKSTEPS WM_USER + 221
#define GRIPBOX_MSG_RESIZED WM_USER + 222
#define GRIPBOX_TOPLEFT 0
#define GRIPBOX_TOP 1
#define GRIPBOX_TOPRIGHT 2
#define GRIPBOX_BOTTOMLEFT 3
#define GRIPBOX_BOTTOM 4
#define GRIPBOX_BOTTOMRIGHT 5
#define GRIPBOX_LEFT 6
#define GRIPBOX_RIGHT 7

#define GRIPBOX_STATE_RESET 0
#define GRIPBOX_STATE_RESIZING 1

#define DOCKINGBOX_LEFT 0
#define DOCKINGBOX_RIGHT 1
#define DOCKINGBOX_TOP 2
#define DOCKINGBOX_BOTTOM 3
#define DOCKINGBOX_FLOATING 4

#define DOCKINGBOX_MSG_CLOSE WM_USER + 300
#define DOCKINGBOX_MSG_QUERY_STATE WM_USER + 301

/* --- AddIns constants */
#define ADDIN_FINISHED 0
#define ADDIN_PERSISTANT 1
#define ADDIN_DIE 2
#define ADDIN_ZOMBIE 3

/* --- Hooks constants */
#define HOOK_MDICREATE 0
#define HOOK_MDI 1
#define HOOK_MDICLIENT 2
#define HOOK_CHILDCREATE 3
#define HOOK_CHILD 4
#define HOOK_CMAXXX 5

#define HOOK_CONTINUE 0
#define HOOK_DIE 1

/* --- Configuration files */
#define INIFILE_MAIN 0
#define INIFILE_CURRENTUSERMENUS 1
#define INIFILE_TOOLBARS 2
#define INIFILE_COLORS 3
#define INIFILE_FTPACCOUNTS 4
#define INIFILE_SKINS 5
#define INIFILE_PROJECTSTYPES 6
#define INIFILE_LANGUAGES 7
#define INIFILE_DATES 8
#define INIFILE_CGREP 9
#define INIFILE_FILTERS 10

// --- Directories
#define DIR_ROOT 0
#define DIR_BIN 1
#define DIR_INCLUDE 2
#define DIR_LIB 3
#define DIR_HELP 4
#define DIR_MAIN 5
#define DIR_WIN 6
#define DIR_WINSYS 7
#define DIR_TEMP 8
#define DIR_TEMPLATES 9
#define DIR_PROJECTS 10
#define DIR_MAINHELP 11
#define DIR_SNIPPETS 12
#define DIR_DATABASES 13
#define DIR_SKINS 14
#define DIR_LANGUAGES 15
#define DIR_DOWNLOADS 16
#define DIR_ADDINS 17
#define DIR_CONFIG 18
#define DIR_MENUS 19
#define DIR_WIZARDS 20
#define DIR_FILTERS 21
#define DIR_EXTRACODE 22
#define DIR_LANGSCRIPTS 23
#define DIR_TOOLS 24
#define DIR_SCRIPTS 25

/* --- Misc constants */
#define MB_INFORMATION MB_ICONINFORMATION + MB_OK
#define MB_QUESTION MB_ICONQUESTION + MB_YESNO
#define MB_ERRORQUESTION MB_ICONERROR + MB_YESNO
#define MB_ERROR MB_ICONERROR + MB_OK
#define MB_QUESTIONCANCEL MB_ICONQUESTION + MB_YESNOCANCEL

#define NOT_CASE_SENSITIVE 0
#define CASE_SENSITIVE 1

#define CONVERTDB_CONTINUE 1
#define CONVERTDB_REQUESTABORT 0
#define CONVERTDB_DONE 0
#define CONVERTDB_USERABORT 1
#define CONVERTDB_ERROR -1

#define MULTIFILESENUM_FORWARD 0
#define MULTIFILESENUM_BACKWARD 1

#define PANELS_MINBASE 1000

#define OSTYPE_WINDOWS_9X 0
#define OSTYPE_WINDOWS_NT 1
#define OSTYPE_WINDOWS_2K 2
#define OSTYPE_WINDOWS_XP 4
#define OSTYPE_WINDOWS_7 8

#define USE_SECURITY_DESCRIPTOR 1
#define NO_SECURITY_DESCRIPTOR 0

#define DATE_GET_SECONDS 1
#define DATE_NO_SECONDS 0

/* --- Treeview popup menu constants */
#define MENU_POP_NONE 0
#define MENU_POP_PROJECT 1
#define MENU_POP_NEWINCLUDE 2
#define MENU_POP_NEWLIBRARY 3
#define MENU_POP_NEWMODULE 4
#define MENU_POP_NEWOBJECT 5
#define MENU_POP_NEWRESOURCE 6
#define MENU_POP_NEWDEF 7
#define MENU_POP_NEWTEXT 8
#define MENU_POP_INCLUDEDETAILS 9
#define MENU_POP_LIBRARYDETAILS 10
#define MENU_POP_MODULEDETAILS 11
#define MENU_POP_OBJECTDETAILS 12
#define MENU_POP_RESOURCEDETAILS 13
#define MENU_POP_DEFDETAILS 14
#define MENU_POP_TEXTDETAILS 15

#define MENU_POP_NEWICON 16
#define MENU_POP_NEWCURSOR 17
#define MENU_POP_NEWBITMAP 18
#define MENU_POP_NEWSTRINGS 19
#define MENU_POP_NEWACCELERATORS 20
#define MENU_POP_NEWMENUS 21
#define MENU_POP_NEWDIALOG 22
#define MENU_POP_NEWRAWDATA 23

#define MENU_POP_ICONDETAILS 24
#define MENU_POP_CURSORDETAILS 25
#define MENU_POP_BITMAPDETAILS 26
#define MENU_POP_STRINGDETAILS 27
#define MENU_POP_ACCELERATORDETAILS 28
#define MENU_POP_MENUDETAILS 29
#define MENU_POP_DIALOGDETAILS 30
#define MENU_POP_RAWDATADETAILS 31

/* --- Outbox contextual menu */
#define MENU_OUTBOX_SAVE_ID 1
#define MENU_OUTBOX_NEW_ID 2
#define MENU_OUTBOX_EMPTY_ID 3
#define MENU_OUTBOX_GOTO_ID 4

/* --- Debugbox contextual menu */
#define MENU_DEBUGBOX_SAVE_ID 1
#define MENU_DEBUGBOX_NEW_ID 2
#define MENU_DEBUGBOX_EMPTY_ID 3
#define MENU_DEBUGBOX_GOTO_ID 4

/* --- Windowsbox contextual menu */
#define MENU_WINDOWSBOX_CLOSE_ID 1
#define MENU_WINDOWSBOX_SAVE_ID 2
#define MENU_WINDOWSBOX_SAVEAS_ID 3
#define MENU_WINDOWSBOX_TOGGLE_ID 4

/* --- Other interface constants */
#define ACCEL_BASE 9000
#define MENU_SEPARATORS_ID -1

#define MENU_RECENTFILES_IDBASE 3000
#define MENU_RECENTPROJECTS_IDBASE 3500
#define MENU_RECENTAPPLICATIONS_IDBASE 3700
#define MENU_RECENTFILESPURGEALL_IDBASE 3996
#define MENU_RECENTPROJECTSPURGEALL_IDBASE 3997
#define MENU_RECENTFILESPURGE_IDBASE 3998
#define MENU_RECENTPROJECTSPURGE_IDBASE 3999
#define MENU_CONTEXT_IDBASE 5000
#define MENU_FILE_IDBASE 4000
#define MENU_EDIT_IDBASE 4500
#define MENU_VIEW_IDBASE 5000
#define MENU_PROJECT_IDBASE 5500
#define MENU_WINDOW_IDBASE 6000
#define MENU_USER_IDBASE 7000
#define MENU_MAXIMA_IDBASE 8000
#define MENU_SEPS_IDBASE 9999
#define MENU_SNIPPET_IDBASE 10000
#define MENU_TEMPLATES_IDBASE 10000
#define MENU_CODEMAXIMA_IDBASE 11000
#define MENU_OUTBOX_IDBASE 12000
#define MENU_DEBUGBOX_IDBASE 12500
#define MENU_WINDOWSBOX_IDBASE 12600
#define MENU_SCRIPTINSERT_IDBASE 13000
#define SYSTRAY_MSG 14000
#define MENU_SYSTRAY_RESTORE 14001
#define MENU_SYSTRAY_EXIT 14002
#define MENU_ADDINS_IDBASE 16000
#define MENU_POP_BASEID 4000

#define MENU_FILE_NEW_ID 0
#define MENU_FILE_CLEAR_ID 1
#define MENU_FILE_DUPLICATEFILE_ID 2
#define MENU_FILE_OPENFILE_ID 3
#define MENU_FILE_FILTERS_ID 4
#define MENU_FILE_OPENWORKSPACE_ID 5
#define MENU_FILE_INCLUDEFILE_ID 6
#define MENU_FILE_FTPMANAGER_ID 7
#define MENU_FILE_CLOSE_ID 8
#define MENU_FILE_CLOSEALL_ID 9
#define MENU_FILE_SAVE_ID 10
#define MENU_FILE_SAVEAS_ID 11
#define MENU_FILE_SAVEALL_ID 12
#define MENU_FILE_SAVEWORKSPACE_ID 13
#define MENU_FILE_REGISTERASSNIPPET_ID 14
#define MENU_FILE_PRINTFILE_ID 15
#define MENU_FILE_CONSOLE_RUN_ID 16
#define MENU_FILE_CONSOLE_CHANGE_ID 17
#define MENU_FILE_RUNEXTERNALPROGRAM_ID 18
#define MENU_FILE_SETWORKINGDIRECTORY_ID 19
#define MENU_FILE_EXIT_ID 20
#define MENU_FILE_RELOADFILE_ID 21
#define MENU_FILE_INCLUDEFILTERS_ID 22
#define MENU_FILE_REGISTERASTEMPLATE_ID 23

#define MENU_EDIT_UNDO_ID 0
#define MENU_EDIT_REDO_ID 1
#define MENU_EDIT_CUT_ID 2
#define MENU_EDIT_COPY_ID 3
#define MENU_EDIT_COPYFILEPATHNAME_ID 4
#define MENU_EDIT_COPYENTIRETEXT_ID 5
#define MENU_EDIT_PASTE_ID 6
#define MENU_EDIT_DELETE_DELETESELECTION_ID 7
#define MENU_EDIT_DELETE_DELETELINE_ID 8
#define MENU_EDIT_DELETE_DELETETOSTARTOFLINE_ID 9
#define MENU_EDIT_DELETE_DELETETOENDOFLINE_ID 10
#define MENU_EDIT_SELECTLINE_ID 11
#define MENU_EDIT_SELECTALL_ID 12
#define MENU_EDIT_SELECTPROCEDURE_ID 13
#define MENU_EDIT_SELECTPROCANDCOLLAPSE_ID 14
#define MENU_EDIT_UNCOLLAPSEPROCEDURE_ID 15
#define MENU_EDIT_FIND_ID 16
#define MENU_EDIT_FINDSELECTION_ID 17
#define MENU_EDIT_FINDNEXT_ID 18
#define MENU_EDIT_FINDPREVIOUS_ID 19
#define MENU_EDIT_REPLACE_ID 20
#define MENU_EDIT_PROCVARIABLESSEARCH_ID 21
#define MENU_EDIT_SEARCHINFILES_ID 22
#define MENU_EDIT_BOOKMARKS_TOGGLE_ID 23
#define MENU_EDIT_BOOKMARKS_FIRST_ID 24
#define MENU_EDIT_BOOKMARKS_PREVIOUS_ID 25
#define MENU_EDIT_BOOKMARKS_NEXT_ID 26
#define MENU_EDIT_BOOKMARKS_LAST_ID 27
#define MENU_EDIT_BOOKMARKS_CLEARALL_ID 28
#define MENU_EDIT_GOTO_TOP_ID 29
#define MENU_EDIT_GOTO_BOTTOM_ID 30
#define MENU_EDIT_GOTO_LINE_ID 31
#define MENU_EDIT_GOTO_MATCHINGBRACKET_ID 32
#define MENU_EDIT_GOTO_PREVIOUSWORD_ID 33
#define MENU_EDIT_GOTO_NEXTWORD_ID 34
#define MENU_EDIT_GOTO_PREVIOUSPROCEDURE_ID 35
#define MENU_EDIT_GOTO_NEXTPROCEDURE_ID 36
#define MENU_EDIT_GOTO_VARIABLEDECLARATION_ID 37
#define MENU_EDIT_GOTO_VARIABLENEXTUSE_ID 38
#define MENU_EDIT_GOTO_PROCEDUREPROTOTYPE_ID 39
#define MENU_EDIT_GOTO_PROCEDUREDECLARATION_ID 40
#define MENU_EDIT_GOTO_PROCEDURENEXTUSE_ID 41
#define MENU_EDIT_BLOCK_INDENT_ID 42
#define MENU_EDIT_BLOCK_UNINDENT_ID 43
#define MENU_EDIT_BLOCK_UPPERCASE_ID 44
#define MENU_EDIT_BLOCK_LOWERCASE_ID 45
#define MENU_EDIT_BLOCK_COMMENT_ID 46
#define MENU_EDIT_BLOCK_UNCOMMENT_ID 47
#define MENU_EDIT_BLOCK_TABIFY_ID 48
#define MENU_EDIT_BLOCK_UNTABIFY_ID 49
#define MENU_EDIT_BLOCK_REGISTERS_ID 50
#define MENU_EDIT_BLOCK_SAVEAS_ID 51
#define MENU_EDIT_BLOCK_PRINT_ID 52
#define MENU_EDIT_BLOCK_BLKCOMMENT_ID 53
#define MENU_EDIT_BLOCK_TOGGLECASE_ID 54
#define MENU_EDIT_BLOCK_SPACESTOTABS_ID 55
#define MENU_EDIT_BLOCK_CONVERTTOINCLUDE_ID 56
#define MENU_EDIT_BLOCK_CUSTOMCOMMENT_ID 57
#define MENU_EDIT_PASTE_NEWWINDOW_ID 58
#define MENU_EDIT_DELETE_DELETEPARAGRAPH_ID 59
#define MENU_EDIT_GOTO_PREVIOUSPARAGRAPH_ID 60
#define MENU_EDIT_GOTO_NEXTPARAGRAPH_ID 61
#define MENU_EDIT_BLOCK_TRIMSPACES_ID 62
#define MENU_EDIT_BREAKPOINTS_TOGGLE_ID 63
#define MENU_EDIT_BREAKPOINTS_FIRST_ID 64
#define MENU_EDIT_BREAKPOINTS_PREVIOUS_ID 65
#define MENU_EDIT_BREAKPOINTS_NEXT_ID 66
#define MENU_EDIT_BREAKPOINTS_LAST_ID 67
#define MENU_EDIT_BREAKPOINTS_CLEARALL_ID 68

#define MENU_VIEW_STATUSBAR_ID 0
#define MENU_VIEW_PROJECTDOCK_ID 1
#define MENU_VIEW_WINDOWSDOCK_ID 2
#define MENU_VIEW_OUTPUTDOCK_ID 3
#define MENU_VIEW_DEBUGDOCK_ID 4
#define MENU_VIEW_REGISTERSDOCK_ID 5
#define MENU_VIEW_PROPERTIES_ID 6
#define MENU_VIEW_USERMENUSEDITOR_ID 7
#define MENU_VIEW_USERTOOLBARSEDITOR_ID 8
#define MENU_VIEW_FULLSCREEN_ID 9

#define MENU_PROJECT_CREATENEWPROJECT_ID 0
#define MENU_PROJECT_OPENPROJECT_ID 1
#define MENU_PROJECT_SAVEPROJECT_ID 2
#define MENU_PROJECT_SAVEPROJECTAS_ID 3
#define MENU_PROJECT_ADDINCLUDE_ID 4
#define MENU_PROJECT_ADDLIBRARY_ID 5
#define MENU_PROJECT_ADDMODULE_ID 6
#define MENU_PROJECT_ADDOBJECT_ID 7
#define MENU_PROJECT_ADDRESOURCE_ID 8
#define MENU_PROJECT_ADDTEXT_ID 9
#define MENU_PROJECT_ADDICON_ID 10
#define MENU_PROJECT_ADDCURSOR_ID 11
#define MENU_PROJECT_ADDBITMAP_ID 12
#define MENU_PROJECT_ADDSTRINGS_ID 13
#define MENU_PROJECT_ADDACCELERATORS_ID 14
#define MENU_PROJECT_ADDMENUS_ID 15
#define MENU_PROJECT_ADDDIALOG_ID 16
#define MENU_PROJECT_ADDRAWDATA_ID 17
#define MENU_PROJECT_PROJECTPROPERTIES_ID 18
#define MENU_PROJECT_ASSEMBLEPROJECT_ID 19
#define MENU_PROJECT_RUNPROJECT_ID 20
#define MENU_PROJECT_DEBUGPROJECT_ID 21

#define MENU_ADDINS_MANAGER_ID 0
#define MENU_ADDINS_FIRSTADDIN_ID 1

#define MENU_WINDOW_CONTEXTHELP_ID 0
#define MENU_WINDOW_MSDNHELP_ID 1
#define MENU_WINDOW_ABOUT_ID 2
#define MENU_WINDOW_SPLIT_ID 3
#define MENU_WINDOW_TILEHORIZONTALLY_ID 4
#define MENU_WINDOW_TILEVERTICALLY_ID 5
#define MENU_WINDOW_CASCADE_ID 6
#define MENU_WINDOW_ARRANGEICONS_ID 7
#define MENU_WINDOW_NEXTWINDOW_ID 8
#define MENU_WINDOW_PREVIOUSWINDOW_ID 9
#define MENU_WINDOW_DDKHELP_ID 10
#define MENU_WINDOW_TIPOFTHEDAY_ID 11

#define PROJECTTOOLBAR_SAVE 1
#define PROJECTTOOLBAR_ASSEMBLE 2
#define PROJECTTOOLBAR_RUN 3
#define PROJECTTOOLBAR_DEBUG 4

#define WINDOWSTOOLBAR_PREVIOUS 1
#define WINDOWSTOOLBAR_NEXT 2
#define WINDOWSTOOLBAR_RELOAD 3

#define DEBUGTOOLBAR_RUN 1
#define DEBUGTOOLBAR_PAUSE 2
#define DEBUGTOOLBAR_STOP 3
#define DEBUGTOOLBAR_STEPINTO 4
#define DEBUGTOOLBAR_STEPOVER 5
#define DEBUGTOOLBAR_STEPOUT 6

#define STATUSTOOLBAR_SAVE 1
#define STATUSTOOLBAR_NEW 2
#define STATUSTOOLBAR_CLEAR 3

#define MENU_CONTEXT_CONTEXTHELP_ID 0
#define MENU_CONTEXT_MSDNHELP_ID 1
#define MENU_CONTEXT_DDKHELP_ID 2
#define MENU_CONTEXT_DIRECTXSDKHELP_ID 3
#define MENU_CONTEXT_OPENFILEUNDERCURSOR_ID 4
#define MENU_CONTEXT_EXECFILEUNDERCURSOR_ID 5
#define MENU_CONTEXT_DECTOHEX_ID 6
#define MENU_CONTEXT_DECTOBIN_ID 7
#define MENU_CONTEXT_HEXTODEC_ID 8
#define MENU_CONTEXT_HEXTOBIN_ID 9
#define MENU_CONTEXT_BINTODEC_ID 10
#define MENU_CONTEXT_BINTOHEX_ID 11
#define MENU_CONTEXT_HEXTOFLT_ID 12
#define MENU_CONTEXT_FLTTOHEX_ID 13
#define MENU_CONTEXT_UNDO_ID 14
#define MENU_CONTEXT_REDO_ID 15
#define MENU_CONTEXT_CUT_ID 16
#define MENU_CONTEXT_COPY_ID 17
#define MENU_CONTEXT_COPYFILEPATHNAME_ID 18
#define MENU_CONTEXT_COPYENTIRETEXT_ID 19
#define MENU_CONTEXT_PASTE_ID 20
#define MENU_CONTEXT_PASTENEWWINDOW_ID 21
#define MENU_CONTEXT_SELECTLINE_ID 22
#define MENU_CONTEXT_SELECTALL_ID 23
#define MENU_CONTEXT_SELECTPROCEDURE_ID 24
#define MENU_CONTEXT_SELECTPROCEDUREANDCOLLAPSE_ID 25
#define MENU_CONTEXT_UNCOLLAPSEPROCEDURE_ID 26
#define MENU_CONTEXT_FIND_ID 27
#define MENU_CONTEXT_REPLACE_ID 28
#define MENU_CONTEXT_BOOKMARKS_TOGGLE_ID 29
#define MENU_CONTEXT_BOOKMARKS_FIRST_ID 30
#define MENU_CONTEXT_BOOKMARKS_PREVIOUS_ID 31
#define MENU_CONTEXT_BOOKMARKS_NEXT_ID 32
#define MENU_CONTEXT_BOOKMARKS_LAST_ID 33
#define MENU_CONTEXT_BOOKMARKS_CLEARALL_ID 34
#define MENU_CONTEXT_BREAKPOINTS_TOGGLE_ID 35
#define MENU_CONTEXT_BREAKPOINTS_FIRST_ID 36
#define MENU_CONTEXT_BREAKPOINTS_PREVIOUS_ID 37
#define MENU_CONTEXT_BREAKPOINTS_NEXT_ID 38
#define MENU_CONTEXT_BREAKPOINTS_LAST_ID 39
#define MENU_CONTEXT_BREAKPOINTS_CLEARALL_ID 40
#define MENU_CONTEXT_GOTO_TOP_ID 41
#define MENU_CONTEXT_GOTO_BOTTOM_ID 42
#define MENU_CONTEXT_GOTO_LINE_ID 43
#define MENU_CONTEXT_GOTO_MATCHINGBRACKET_ID 44
#define MENU_CONTEXT_GOTO_PREVIOUSWORD_ID 45
#define MENU_CONTEXT_GOTO_NEXTWORD_ID 46
#define MENU_CONTEXT_GOTO_PREVIOUSPROCEDURE_ID 47
#define MENU_CONTEXT_GOTO_NEXTPROCEDURE_ID  48
#define MENU_CONTEXT_GOTO_PREVIOUSPARAGRAPH_ID 49
#define MENU_CONTEXT_GOTO_NEXTPARAGRAPH_ID  50
#define MENU_CONTEXT_GOTO_VARIABLEDECLARATION_ID 51
#define MENU_CONTEXT_GOTO_VARIABLENEXTUSE_ID 52
#define MENU_CONTEXT_GOTO_PROCEDUREPROTOTYPE_ID 53
#define MENU_CONTEXT_GOTO_PROCEDUREENTRYPOINT_ID 54
#define MENU_CONTEXT_GOTO_PROCEDURENEXTUSE_ID 55
#define MENU_CONTEXT_BLOCK_INDENT_ID 56
#define MENU_CONTEXT_BLOCK_UNINDENT_ID 57
#define MENU_CONTEXT_BLOCK_UPPERCASE_ID 58
#define MENU_CONTEXT_BLOCK_LOWERCASE_ID 59
#define MENU_CONTEXT_BLOCK_TOGGLECASE_ID 60
#define MENU_CONTEXT_BLOCK_COMMENT_ID 61
#define MENU_CONTEXT_BLOCK_UNCOMMENT_ID 62
#define MENU_CONTEXT_BLOCK_TABIFY_ID 63
#define MENU_CONTEXT_BLOCK_UNTABIFY_ID 64
#define MENU_CONTEXT_BLOCK_SPACESTOTABS_ID 65
#define MENU_CONTEXT_BLOCK_REGISTERS_ID 66
#define MENU_CONTEXT_BLOCK_BLKCOMMENT_ID 67
#define MENU_CONTEXT_BLOCK_CUSTOMCOMMENT_ID 68
#define MENU_CONTEXT_BLOCK_TRIMSPACES_ID 69
#define MENU_CONTEXT_BLOCK_CONVERTTOINCLUDE_ID 70
#define MENU_CONTEXT_BLOCK_SAVEAS_ID 71
#define MENU_CONTEXT_BLOCK_PRINT_ID 72
#define MENU_CONTEXT_NEW_ID 73
#define MENU_CONTEXT_INCLUDEFILE_ID 74
#define MENU_CONTEXT_INCLUDEFILTERS_ID 75
#define MENU_CONTEXT_DUPLICATEFILE_ID 76
#define MENU_CONTEXT_RELOADFILE_ID 77
#define MENU_CONTEXT_PROPERTIES_ID 78

/* --- Main icons */
#define ICON_BASE 1000
#define ICON_ASKDIR 0
#define ICON_ASM 1
#define ICON_ASSEMBLE 2
#define ICON_CASCADE 3
#define ICON_CLOSE 4
#define ICON_CLOSEWIN 5
#define ICON_COLORS 6
#define ICON_COMMENT 7
#define ICON_COMPONENT 8
#define ICON_CONSOLE 9
#define ICON_COPY 10
#define ICON_CUBES 11
#define ICON_CUT 12
#define ICON_DEBUG 13
#define ICON_DELETE 14
#define ICON_DELSTATUS 15
#define ICON_DIRPERMS 16
#define ICON_DIRUP 17
#define ICON_DIRVIEW 18
#define ICON_DOWNLOAD 19
#define ICON_EARTH 20
#define ICON_EXEC 21
#define ICON_FILEASSOC 22
#define ICON_FILES 23
#define ICON_FIND 24
#define ICON_FINDNEXT 25
#define ICON_FINDPREV 26
#define ICON_FTPUSER 27
#define ICON_GETREG 28
#define ICON_HELPFILES 29
#define ICON_INDENT 30
#define ICON_INSERT 31
#define ICON_INTERNET 32
#define ICON_MAIL 33
#define ICON_MAINICON 34
#define ICON_KEYBOARD 35
#define ICON_MENUED 36
#define ICON_MSDOS 37
#define ICON_NEW 38
#define ICON_NEWDIR 39
#define ICON_NEWFTP 40
#define ICON_OPEN 41
#define ICON_OUTDENT 42
#define ICON_PASTE 43
#define ICON_PAUSE 44
#define ICON_STACK 45
#define ICON_PLUG 46
#define ICON_PRINT 47
#define ICON_PROPERTIES 48
#define ICON_REDO 49
#define ICON_REFRESH 50
#define ICON_RENAMEDIR 51
#define ICON_REPLACE 52
#define ICON_RES 53
#define ICON_RUNPROG 54
#define ICON_SAVE 55
#define ICON_SAVELITTLE 56
#define ICON_SETBOOK 57
#define ICON_SNAP 58
#define ICON_SPLIT 59
#define ICON_STATIC 60
#define ICON_STEP 61
#define ICON_STOP 62
#define ICON_STOREREG 63
#define ICON_TILEHORZ 64
#define ICON_TILEVERT 65
#define ICON_TOOLBARS 66
#define ICON_TOWIN 67
#define ICON_UNCOMMENT 68
#define ICON_UNDO 69
#define ICON_UPLOAD 70
#define ICON_USER 71
#define ICON_WINDOWS 72
#define ICON_YIN 73
#define ICON_LAB 74
#define ICON_WINDOW 75
#define ICON_KEY 76
#define ICON_KEYREPLACE 77
#define ICON_SERV 78
#define ICON_POPUP 79
#define ICON_ITEM 80
#define ICON_SEPARATOR 81
#define ICON_UP 82
#define ICON_DOWN 83
#define ICON_DIRECTX 84
#define ICON_CUSTTOOLBARS 85
#define ICON_ADDINR 86
#define ICON_ADDINS 87
#define ICON_PANEL 88
#define ICON_EDITDOC 89
#define ICON_STAR 90
#define ICON_RELOAD 91
#define ICON_STEPBACK 92
#define ICON_WINDOWNORM 93
#define ICON_WINDOWMODIF 94
#define ICON_FULLSCREEN 95
#define ICON_RUNPROJECT 96
#define ICON_DEBUGPROJECT 97
#define ICON_BUILDPROJECT 98
#define ICON_ADDACTIVE 99
#define ICON_ADDALLACTIVE 100
#define ICON_ADDDIRECTORY 101
#define ICON_PROCESS 102
#define ICON_PAUSELITTLE 103
#define ICON_STOPLITTLE 104
#define ICON_THREAD 105
#define ICON_NEXTWINDOW 106
#define ICON_PREVWINDOW 107
#define ICON_FIRSTBOOK 108
#define ICON_PREVBOOK 109
#define ICON_NEXTBOOK 110
#define ICON_LASTBOOK 111
#define ICON_CLEARBOOK 112
#define ICON_ADDFILES 113
#define ICON_WINDOWLOCK 114
#define ICON_DIRSEARCH 115
#define ICON_ADDLIBRARY 116
#define ICON_ADDRESOURCE 117
#define ICON_MENUDROPDOWN 118
#define ICON_LIGHT 119
#define ICON_HEARTOFGOLD 120
#define ICON_HEARTOFGOLDPLUS 121
#define ICON_ADDFILTER 122
#define ICON_TOWINDOW 123
#define ICON_SETBREAK 124
#define ICON_CLEARBREAK 125
#define ICON_NEXTBREAK 126
#define ICON_PREVBREAK 127
#define ICON_FIRSTBREAK 128
#define ICON_LASTBREAK 129
#define ICON_STEPINTO 130
#define ICON_STEPOVER 131
#define ICON_STEPOUT 132
#define ICON_ADDCONST 133
#define ICON_STATUSBAR 134
#define ICON_LOWERCASE 135
#define ICON_UPPERCASE 136
#define ICON_REPLACECONST 137
#define ICON_AUDIO 138
#define ICON_OBJECT 139
#define ICON_ADDOBJECT 140
#define ICON_OPENGL 141
#define ICON_REGEAX 142
#define ICON_REGEBX 143
#define ICON_REGECX 144
#define ICON_REGEDX 145
#define ICON_REGESI 146
#define ICON_REGEDI 147
#define ICON_REGEIP 148
#define ICON_REGESP 149
#define ICON_REGEBP 150
#define ICON_REGEFL 151
#define ICON_REGCS 152
#define ICON_REGDS 153
#define ICON_REGES 154
#define ICON_REGFS 155
#define ICON_REGGS 156
#define ICON_REGSS 157
#define ICON_REGST0 158
#define ICON_REGST1 159
#define ICON_REGST2 160
#define ICON_REGST3 161
#define ICON_REGST4 162
#define ICON_REGST5 163
#define ICON_REGST6 164
#define ICON_REGST7 165
#define ICON_REGFPUCTRL 166
#define ICON_REGFPUSTAT 167
#define ICON_REGFPUTAGS 168
#define ICON_REGFPUEDO 169
#define ICON_REGMM0 170
#define ICON_REGMM1 171
#define ICON_REGMM2 172
#define ICON_REGMM3 173
#define ICON_REGMM4 174
#define ICON_REGMM5 175
#define ICON_REGMM6 176
#define ICON_REGMM7 177
#define ICON_REGXMM0 178
#define ICON_REGXMM1 179
#define ICON_REGXMM2 180
#define ICON_REGXMM3 181
#define ICON_REGXMM4 182
#define ICON_REGXMM5 183
#define ICON_REGXMM6 184
#define ICON_REGXMM7 185
#define ICON_REGMXCSR 186

/* --- Cursors */
#define CURSOR_BASE 1950
#define CURSOR_SPLITH 0
#define CURSOR_SPLITV 1
#define CURSOR_DRAG 2

/* --- Little icons (hLittleImageList) */
#define ICON_SMALL_ASSEMBLE 0
#define ICON_SMALL_SAVELITTLE 1
#define ICON_SMALL_EXEC 2
#define ICON_SMALL_DEBUG 3
#define ICON_SMALL_CLOSEWIN 4
#define ICON_SMALL_TOWIN 5
#define ICON_SMALL_DELSTATUS 6
#define ICON_SMALL_RELOAD 7
#define ICON_SMALL_BACK 8
#define ICON_SMALL_PAUSELITTLE 9
#define ICON_SMALL_STOPLITTLE 10

/* --- Resources controls icons */
#define ICON_RES_BASE 2500
#define ICON_RES_ANIMATION 0
#define ICON_RES_BUTTON 1
#define ICON_RES_CALENDAR 2
#define ICON_RES_CHECKBOX 3
#define ICON_RES_COMBOBOX 4
#define ICON_RES_CURSOR 5
#define ICON_RES_DATEPICKER 6
#define ICON_RES_FRAME 7
#define ICON_RES_HOTKEY 8
#define ICON_RES_HSCROLLBAR 9
#define ICON_RES_LABEL 10
#define ICON_RES_LISTBOX 11
#define ICON_RES_LISTVIEW 12
#define ICON_RES_PICTURE 13
#define ICON_RES_PROGRESSBAR 14
#define ICON_RES_RADIOBUTTON 15
#define ICON_RES_SLIDER 16
#define ICON_RES_SPIN 17
#define ICON_RES_SYSTAB 18
#define ICON_RES_TEXT 19
#define ICON_RES_TEXTIP 20
#define ICON_RES_TREEVIEW 21
#define ICON_RES_VSCROLLBAR 22
#define ICON_RES_XCOMBOBOX 23
#define ICON_RES_VERTSLIDER 24
#define ICON_RES_TOOLBAR 25
#define ICON_RES_STATUSBAR 26
#define ICON_RES_RICHTEXT 27
#define ICON_RES_PAGER 28
#define ICON_RES_HEADER 29
#define ICON_RES_REBAR 30
#define ICON_RES_TOOLTIP 31

/* --- Resources tools icons */
#define ICON_RES_TOOL_BASE 2700
#define ICON_RES_TOOL_LOCKCTRL 0
#define ICON_RES_TOOL_ALIGNBOTTOM 1
#define ICON_RES_TOOL_ALIGNLEFT 2
#define ICON_RES_TOOL_ALIGNRIGHT 3
#define ICON_RES_TOOL_ALIGNTOP 4
#define ICON_RES_TOOL_CENTERHORZ 5
#define ICON_RES_TOOL_CENTERVERT 6
#define ICON_RES_TOOL_GRID 7
#define ICON_RES_TOOL_SAMEHEIGHT 8
#define ICON_RES_TOOL_SAMESIZE 9
#define ICON_RES_TOOL_SAMEWIDTH 10
#define ICON_RES_TOOL_SPACEACROSS 11
#define ICON_RES_TOOL_SPACEDOWN 12
#define ICON_RES_TOOL_ALIGNGRID 13
#define ICON_RES_TOOL_TEST 14
#define ICON_RES_TOOL_TOOLBAR 15
#define ICON_RES_TOOL_PROPERTIES 16

/* --- Stock dialogs constants */
#define MODALDLG_STOCK_EMPTY 0
#define MODALDLG_STOCK_STDCLOSE 1
#define MODALDLG_STOCK_STDOKCANCEL 2
#define MODALDLG_STOCK_WIZARD 3

#define WIZARD_STOCK_STDX 560
#define WIZARD_STOCK_STDY 359
#define WIZARD_STOCK_PICTUREX 200

#define BUTTON_STOCK_CLOSE_ID 1
#define BUTTON_STOCK_OK_ID 1
#define BUTTON_STOCK_FINISH_ID 1
#define BUTTON_STOCK_CANCEL_ID 2
#define BUTTON_STOCK_PREVIOUS_ID 3
#define BUTTON_STOCK_NEXT_ID 4

/* ---- CMaxXX constants */
#define CM_MAX_FINDREPL_TEXT 100
#define CM_FIND_REPLACE_MRU_MAX 10
#define CM_FIND_REPLACE_MRU_BUFF_SIZE ((CM_MAX_FINDREPL_TEXT + 1) * CM_FIND_REPLACE_MRU_MAX)
#define CM_MAX_CMD_STRING 50
#define CM_MAX_CMD_DESCRIPTION 100
#define CM_MAX_LANGUAGE_NAME 30
#define CM_MAX_TABSIZE 100
#define CM_MIN_TABSIZE 2
#define CM_CXLEFTMARGIN 24
#define CML_OWNERDRAW 1
#define CML_NOTIFY_DEL 2

#define CMM_SETLANGUAGE (WM_USER + 1600)
#define CMM_GETLANGUAGE (WM_USER + 1601)
#define CMM_ENABLECOLORSYNTAX (WM_USER + 1610)
#define CMM_ISCOLORSYNTAXENABLED (WM_USER + 1620)
#define CMM_SETCOLORS (WM_USER + 1630)
#define CMM_GETCOLORS (WM_USER + 1640)
#define CMM_ENABLEWHITESPACEDISPLAY (WM_USER + 1800)
#define CMM_ISWHITESPACEDISPLAYENABLED (WM_USER + 1810)
#define CMM_ENABLETABEXPAND (WM_USER + 1811)
#define CMM_ISTABEXPANDENABLED (WM_USER + 1812)
#define CMM_ENABLESMOOTHSCROLLING (WM_USER + 1820)
#define CMM_SETTABSIZE (WM_USER + 1821)
#define CMM_GETTABSIZE (WM_USER + 1822)
#define CMM_ISSMOOTHSCROLLINGENABLED (WM_USER + 1830)
#define CMM_SETREADONLY (WM_USER + 1840)
#define CMM_ISREADONLY (WM_USER + 1850)
#define CMM_ENABLELINETOOLTIPS (WM_USER + 1860)
#define CMM_ISLINETOOLTIPSENABLED (WM_USER + 1870)
#define CMM_ENABLELEFTMARGIN (WM_USER + 1880)
#define CMM_ISLEFTMARGINENABLED (WM_USER + 1890)
#define CMM_ENABLECOLUMNSEL (WM_USER + 1891)
#define CMM_ISCOLUMNSELENABLED (WM_USER + 1892)
#define CMM_ENABLEDRAGDROP (WM_USER + 1893)
#define CMM_ISDRAGDROPENABLED (WM_USER + 1894)
#define CMM_ENABLEOVERTYPE (WM_USER + 1900)
#define CMM_ISOVERTYPEENABLED (WM_USER + 1910)
#define CMM_ENABLECASESENSITIVE (WM_USER + 1920)
#define CMM_ISCASESENSITIVEENABLED (WM_USER + 1930)
#define CMM_ENABLEPRESERVECASE (WM_USER + 1931)
#define CMM_ISPRESERVECASEENABLED (WM_USER + 1932)
#define CMM_ENABLEWHOLEWORD (WM_USER + 1940)
#define CMM_ISWHOLEWORDENABLED (WM_USER + 1950)
#define CMM_SETTOPINDEX (WM_USER + 1960)
#define CMM_GETTOPINDEX (WM_USER + 1970)
#define CMM_GETVISIBLELINECOUNT (WM_USER + 1980)
#define CMM_HITTEST (WM_USER + 1990)
#define CMM_OPENFILE (WM_USER + 2300)
#define CMM_SAVEFILE (WM_USER + 2310)
#define CMM_INSERTFILE (WM_USER + 2320)
#define CMM_INSERTTEXT (WM_USER + 2330)
#define CMM_SETTEXT (WM_USER + 2335)
#define CMM_REPLACETEXT (WM_USER + 2340)
#define CMM_GETTEXTLENGTH (WM_USER + 2350)
#define CMM_GETTEXT (WM_USER + 2360)
#define CMM_GETLINECOUNT (WM_USER + 2365)
#define CMM_GETLINE (WM_USER + 2370)
#define CMM_GETLINELENGTH (WM_USER + 2380)
#define CMM_GETWORD (WM_USER + 2381)
#define CMM_GETWORDLENGTH (WM_USER + 2382)
#define CMM_ADDTEXT (WM_USER + 2390)
#define CMM_DELETELINE (WM_USER + 2400)
#define CMM_INSERTLINE (WM_USER + 2410)
#define CMM_GETSEL (WM_USER + 2420)
#define CMM_GETSELFROMPOINT (WM_USER + 2425)
#define CMM_SETSEL (WM_USER + 2430)
#define CMM_SELECTLINE (WM_USER + 2435)
#define CMM_DELETESEL (WM_USER + 2440)
#define CMM_REPLACESEL (WM_USER + 2450)
#define CMM_ISMODIFIED (WM_USER + 2460)
#define CMM_SETMODIFIED (WM_USER + 2461)
#define CMM_ENABLECRLF (WM_USER + 2470)
#define CMM_ISCRLFENABLED (WM_USER + 2480)
#define CMM_SETFONTOWNERSHIP (WM_USER + 2485)
#define CMM_GETFONTOWNERSHIP (WM_USER + 2486)
#define CMM_EXECUTECMD (WM_USER + 2700)
#define CMM_SETSPLITTERPOS (WM_USER + 2900)
#define CMM_GETSPLITTERPOS (WM_USER + 2901)
#define CMM_SETAUTOINDENTMODE (WM_USER + 3100)
#define CMM_GETAUTOINDENTMODE (WM_USER + 3110)
#define CMM_CANUNDO (WM_USER + 3300)
#define CMM_CANREDO (WM_USER + 3310)
#define CMM_CANCUT (WM_USER + 3320)
#define CMM_CANCOPY (WM_USER + 3330)
#define CMM_CANPASTE (WM_USER + 3340)
#define CMM_REDO (WM_USER + 3350)
#define CMM_CLEARUNDOBUFFER (WM_USER + 3351)
#define CMM_UNDO (WM_USER + 3360)
#define CMM_CUT (WM_USER + 3370)
#define CMM_COPY (WM_USER + 3380)
#define CMM_PASTE (WM_USER + 3390)
#define CMM_SETUNDOLIMIT (WM_USER + 3400)
#define CMM_GETUNDOLIMIT (WM_USER + 3410)
#define CMM_GETVIEWCOUNT (WM_USER + 3600)
#define CMM_GETCURRENTVIEW (WM_USER + 3610)
#define CMM_SHOWSCROLLBAR (WM_USER + 3700)
#define CMM_HASSCROLLBAR (WM_USER + 3710)
#define CMM_ENABLESPLITTER (WM_USER + 3720)
#define CMM_ISSPLITTERENABLED (WM_USER + 3730)
#define CMM_ENABLEGLOBALPROPS (WM_USER + 3740)
#define CMM_ISGLOBALPROPSENABLED (WM_USER + 3741)
#define CMM_SETDLGPARENT (WM_USER + 3750)
#define CMM_ENABLESELBOUNDS (WM_USER + 3760)
#define CMM_ISSELBOUNDSENABLED (WM_USER + 3770)
#define CMM_SETFONTSTYLES (WM_USER + 3780)
#define CMM_GETFONTSTYLES (WM_USER + 3790)
#define CMM_ENABLEREGEXP (WM_USER + 3800)
#define CMM_ISREGEXPENABLED (WM_USER + 3810)
#define CMM_SETITEMDATA (WM_USER + 3820)
#define CMM_GETITEMDATA (WM_USER + 3830)
#define CMM_SETLINESTYLE (WM_USER + 3840)
#define CMM_GETLINESTYLE (WM_USER + 3850)
#define CMM_SETBOOKMARK (WM_USER + 3860)
#define CMM_GETBOOKMARK (WM_USER + 3870)
#define CMM_SETALLBOOKMARKS (WM_USER + 3880)
#define CMM_GETALLBOOKMARKS (WM_USER + 3890)
#define CMM_SETBREAKPOINT (WM_USER + 3900)
#define CMM_GETBREAKPOINT (WM_USER + 3910)
#define CMM_SETALLBREAKPOINTS (WM_USER + 3920)
#define CMM_GETALLBREAKPOINTS (WM_USER + 3930)
#define CMM_SETLINENUMBERING (WM_USER + 3940)
#define CMM_GETLINENUMBERING (WM_USER + 3950)
#define CMM_POSFROMCHAR (WM_USER + 3960)
#define CMM_ENABLEHIDESEL (WM_USER + 3970)
#define CMM_ISHIDESELENABLED (WM_USER + 3980)
#define CMM_SETHIGHLIGHTEDLINE (WM_USER + 3990)
#define CMM_GETHIGHLIGHTEDLINE (WM_USER + 4000)
#define CMM_ENABLENORMALIZECASE (WM_USER + 4010)
#define CMM_ISNORMALIZECASEENABLED (WM_USER + 4020)
#define CMM_SETDIVIDER (WM_USER + 4030)
#define CMM_GETDIVIDER (WM_USER + 4040)
#define CMM_ENABLEOVERTYPECARET (WM_USER + 4050)
#define CMM_ISOVERTYPECARETENABLED (WM_USER + 4060)
#define CMM_SETFINDTEXT (WM_USER + 4070)
#define CMM_GETFINDTEXT (WM_USER + 4080)
#define CMM_SETREPLACETEXT (WM_USER + 4090)
#define CMM_GETREPLACETEXT (WM_USER + 4100)
#define CMM_SETIMAGELIST (WM_USER + 4110)
#define CMM_GETIMAGELIST (WM_USER + 4120)
#define CMM_SETMARGINIMAGES (WM_USER + 4130)
#define CMM_GETMARGINIMAGES (WM_USER + 4140)
#define CMM_PRINT (WM_USER + 4150)
#define CMM_SETCARETPOS (WM_USER + 4160)
#define CMM_VIEWCOLTOBUFFERCOL (WM_USER + 4170)
#define CMM_BUFFERCOLTOVIEWCOL (WM_USER + 4180)
#define CMM_SETBORDERSTYLE (WM_USER + 4190)
#define CMM_GETBORDERSTYLE (WM_USER + 4200)
#define CMM_SETCURRENTVIEW (WM_USER + 4210)
#define CMM_REPLACELINE (WM_USER + 4220)
#define CMM_SETTOKENCALLBACK (WM_USER + 4230)
#define CMM_ENABLEALLOPENED (WM_USER + 4240)

#define CMN_CHANGE 100
#define CMN_HSCROLL 110
#define CMN_VSCROLL 120
#define CMN_SELCHANGE 130
#define CMN_VIEWCHANGE 140
#define CMN_MODIFIEDCHANGE 150
#define CMN_SHOWPROPS 160
#define CMN_PROPSCHANGE 170
#define CMN_CREATE 180
#define CMN_DESTROY 190
#define CMN_DRAWLINE 200
#define CMN_DELETELINE 210
#define CMN_CMDFAILURE 220
#define CMN_REGISTEREDCMD 230
#define CMN_KEYDOWN 240
#define CMN_KEYUP 250
#define CMN_KEYPRESS 260
#define CMN_MOUSEDOWN 270
#define CMN_MOUSEUP 280
#define CMN_MOUSEMOVE 290
#define CMN_OVERTYPECHANGE 300
#define CMN_FINDWRAPPED 310

#define CMD_FIRST 100
#define CMD_WORDUPPERCASE (CMD_FIRST + 0)
#define CMD_WORDTRANSPOSE (CMD_FIRST + 1)
#define CMD_WORDRIGHTEXTEND (CMD_FIRST + 2)
#define CMD_WORDRIGHT (CMD_FIRST + 3)
#define CMD_WORDENDRIGHT (CMD_FIRST + 4)
#define CMD_WORDENDRIGHTEXTEND (CMD_FIRST + 5)
#define CMD_WORDLOWERCASE (CMD_FIRST + 6)
#define CMD_WORDLEFTEXTEND (CMD_FIRST + 7)
#define CMD_WORDLEFT (CMD_FIRST + 8)
#define CMD_WORDENDLEFT (CMD_FIRST + 9)
#define CMD_WORDENDLEFTEXTEND (CMD_FIRST + 10)
#define CMD_WORDDELETETOSTART (CMD_FIRST + 11)
#define CMD_WORDDELETETOEND (CMD_FIRST + 12)
#define CMD_WORDCAPITALIZE (CMD_FIRST + 13)
#define CMD_WINDOWSTART (CMD_FIRST + 14)
#define CMD_WINDOWSCROLLUP (CMD_FIRST + 15)
#define CMD_WINDOWSCROLLTOTOP (CMD_FIRST + 16)
#define CMD_WINDOWSCROLLTOCENTER (CMD_FIRST + 17)
#define CMD_WINDOWSCROLLTOBOTTOM (CMD_FIRST + 18)
#define CMD_WINDOWSCROLLRIGHT (CMD_FIRST + 19)
#define CMD_WINDOWSCROLLLEFT (CMD_FIRST + 20)
#define CMD_WINDOWSCROLLDOWN (CMD_FIRST + 21)
#define CMD_WINDOWRIGHTEDGE (CMD_FIRST + 22)
#define CMD_WINDOWLEFTEDGE (CMD_FIRST + 23)
#define CMD_WINDOWEND (CMD_FIRST + 24)
#define CMD_UPPERCASESELECTION (CMD_FIRST + 25)
#define CMD_UNTABIFYSELECTION (CMD_FIRST + 26)
#define CMD_UNINDENTSELECTION (CMD_FIRST + 27)
#define CMD_UNDOCHANGES (CMD_FIRST + 28)
#define CMD_UNDO (CMD_FIRST + 29)
#define CMD_TABIFYSELECTION (CMD_FIRST + 30)
#define CMD_SENTENCERIGHT (CMD_FIRST + 31)
#define CMD_SENTENCELEFT (CMD_FIRST + 32)
#define CMD_SENTENCECUT (CMD_FIRST + 33)
#define CMD_SELECTSWAPANCHOR (CMD_FIRST + 34)
#define CMD_SELECTPARA (CMD_FIRST + 35)
#define CMD_SELECTLINE (CMD_FIRST + 36)
#define CMD_SELECTALL (CMD_FIRST + 37)
#define CMD_REDOCHANGES (CMD_FIRST + 38)
#define CMD_REDO (CMD_FIRST + 39)
#define CMD_PASTE (CMD_FIRST + 40)
#define CMD_PARAUP (CMD_FIRST + 41)
#define CMD_PARADOWN (CMD_FIRST + 42)
#define CMD_PAGEUPEXTEND (CMD_FIRST + 43)
#define CMD_PAGEUP (CMD_FIRST + 44)
#define CMD_PAGEDOWNEXTEND (CMD_FIRST + 45)
#define CMD_PAGEDOWN (CMD_FIRST + 46)
#define CMD_LOWERCASESELECTION (CMD_FIRST + 47)
#define CMD_LINEUPEXTEND (CMD_FIRST + 48)
#define CMD_LINEUP (CMD_FIRST + 49)
#define CMD_LINETRANSPOSE (CMD_FIRST + 50)
#define CMD_LINESTART (CMD_FIRST + 51)
#define CMD_LINEOPENBELOW (CMD_FIRST + 52)
#define CMD_LINEOPENABOVE (CMD_FIRST + 53)
#define CMD_LINEENDEXTEND (CMD_FIRST + 54)
#define CMD_LINEEND (CMD_FIRST + 55)
#define CMD_LINEDOWNEXTEND (CMD_FIRST + 56)
#define CMD_LINEDOWN (CMD_FIRST + 57)
#define CMD_LINEDELETETOSTART (CMD_FIRST + 58)
#define CMD_LINEDELETETOEND (CMD_FIRST + 59)
#define CMD_LINEDELETE (CMD_FIRST + 60)
#define CMD_LINECUT (CMD_FIRST + 61)
#define CMD_INDENTTOPREV (CMD_FIRST + 62)
#define CMD_INDENTSELECTION (CMD_FIRST + 63)
#define CMD_HOMEEXTEND (CMD_FIRST + 64)
#define CMD_HOME (CMD_FIRST + 65)
#define CMD_GOTOMATCHBRACE (CMD_FIRST + 66)
#define CMD_GOTOINDENTATION (CMD_FIRST + 67)
#define CMD_GOTOLINE (CMD_FIRST + 68)
#define CMD_FINDREPLACE (CMD_FIRST + 69)
#define CMD_REPLACE (CMD_FIRST + 70)
#define CMD_REPLACEALLINBUFFER (CMD_FIRST + 71)
#define CMD_REPLACEALLINSELECTION (CMD_FIRST + 72)
#define CMD_FINDPREVWORD (CMD_FIRST + 73)
#define CMD_FINDPREV (CMD_FIRST + 74)
#define CMD_FINDNEXTWORD (CMD_FIRST + 75)
#define CMD_FINDNEXT (CMD_FIRST + 76)
#define CMD_FINDMARKALL (CMD_FIRST + 77)
#define CMD_FIND (CMD_FIRST + 78)
#define CMD_SETFINDTEXT (CMD_FIRST + 79)
#define CMD_SETREPLACETEXT (CMD_FIRST + 80)
#define CMD_TOGGLEPRESERVECASE (CMD_FIRST + 81)
#define CMD_TOGGLEWHOLEWORD (CMD_FIRST + 82)
#define CMD_TOGGLECASESENSITIVE (CMD_FIRST + 83)
#define CMD_END (CMD_FIRST + 84)
#define CMD_TOGGLEWHITESPACEDISPLAY (CMD_FIRST + 85)
#define CMD_TOGGLEOVERTYPE (CMD_FIRST + 86)
#define CMD_SETREPEATCOUNT (CMD_FIRST + 87)
#define CMD_DOCUMENTSTARTEXTEND (CMD_FIRST + 88)
#define CMD_DOCUMENTSTART (CMD_FIRST + 89)
#define CMD_DOCUMENTENDEXTEND (CMD_FIRST + 90)
#define CMD_DOCUMENTEND (CMD_FIRST + 91)
#define CMD_DELETEHORIZONTALSPACE (CMD_FIRST + 92)
#define CMD_DELETEBLANKLINES (CMD_FIRST + 93)
#define CMD_DELETEBACK (CMD_FIRST + 94)
#define CMD_DELETE (CMD_FIRST + 95)
#define CMD_CUTSELECTION (CMD_FIRST + 96)
#define CMD_CUT (CMD_FIRST + 97)
#define CMD_COPY (CMD_FIRST + 98)
#define CMD_CHARTRANSPOSE (CMD_FIRST + 99)
#define CMD_CHARRIGHTEXTEND (CMD_FIRST + 100)
#define CMD_CHARRIGHT (CMD_FIRST + 101)
#define CMD_CHARLEFTEXTEND (CMD_FIRST + 102)
#define CMD_CHARLEFT (CMD_FIRST + 103)
#define CMD_BOOKMARKTOGGLE (CMD_FIRST + 104)
#define CMD_BOOKMARKPREV (CMD_FIRST + 105)
#define CMD_BOOKMARKNEXT (CMD_FIRST + 106)
#define CMD_BOOKMARKCLEARALL (CMD_FIRST + 107)
#define CMD_BOOKMARKJUMPTOFIRST (CMD_FIRST + 108)
#define CMD_BOOKMARKJUMPTOLAST (CMD_FIRST + 109)
#define CMD_BREAKPOINTTOGGLE (CMD_FIRST + 110)
#define CMD_BREAKPOINTPREV (CMD_FIRST + 111)
#define CMD_BREAKPOINTNEXT (CMD_FIRST + 112)
#define CMD_BREAKPOINTCLEARALL (CMD_FIRST + 113)
#define CMD_BREAKPOINTJUMPTOFIRST (CMD_FIRST + 114)
#define CMD_BREAKPOINTJUMPTOLAST (CMD_FIRST + 115)
#define CMD_APPENDNEXTCUT (CMD_FIRST + 116)
#define CMD_INSERTCHAR (CMD_FIRST + 117)
#define CMD_NEWLINE (CMD_FIRST + 118)
#define CMD_PROPERTIES (CMD_FIRST + 119)
#define CMD_BEGINUNDO (CMD_FIRST + 120)
#define CMD_ENDUNDO (CMD_FIRST + 121)
#define CMD_RESERVED3 (CMD_FIRST + 122)
#define CMD_TOGGLEREGEXP (CMD_FIRST + 123)
#define CMD_CLEARSELECTION (CMD_FIRST + 124)
#define CMD_REGEXPON (CMD_FIRST + 125)
#define CMD_REGEXPOFF (CMD_FIRST + 126)
#define CMD_WHOLEWORDON (CMD_FIRST + 127)
#define CMD_WHOLEWORDOFF (CMD_FIRST + 128)
#define CMD_PRESERVECASEON (CMD_FIRST + 129)
#define CMD_PRESERVECASEOFF (CMD_FIRST + 130)
#define CMD_CASESENSITIVEON (CMD_FIRST + 131)
#define CMD_CASESENSITIVEOFF (CMD_FIRST + 132)
#define CMD_WHITESPACEDISPLAYON (CMD_FIRST + 133)
#define CMD_WHITESPACEDISPLAYOFF (CMD_FIRST + 134)
#define CMD_OVERTYPEON (CMD_FIRST + 135)
#define CMD_OVERTYPEOFF (CMD_FIRST + 136)
#define CMD_TOGGLEALLOPENED (CMD_FIRST + 137)
#define CMD_LAST (CMD_FIRST + 138)

#define CMD_USER_BASE (CMD_FIRST + 900)

#define CMDERR_FAILURE 1
#define CMDERR_INPUT 2
#define CMDERR_SELECTION 3
#define CMDERR_NOTFOUND 4
#define CMDERR_EMPTYBUF 5
#define CMDERR_READONLY 6

#define CMLS_PROCEDURAL 0
#define CMLS_SGML 1

#define CM_FONT_NORMAL 0
#define CM_FONT_BOLD 1
#define CM_FONT_ITALIC 2
#define CM_FONT_BOLDITALIC 3
#define CM_FONT_UNDERLINE 4

#define CM_INDENT_OFF 0
#define CM_INDENT_SCOPE 1
#define CM_INDENT_PREVLINE 2

#define CM_PRINT_PROMPTDLG 0x0
#define CM_PRINT_DEFAULTPRN 0x1
#define CM_PRINT_HDC 0x2
#define CM_PRINT_RICHFONTS 0x4
#define CM_PRINT_COLOR 0x8
#define CM_PRINT_PAGENUMS 0x10
#define CM_PRINT_DATETIME 0x20
#define CM_PRINT_BORDERTHIN 0x40
#define CM_PRINT_BORDERTHICK 0x80
#define CM_PRINT_BORDERDOUBLE 0x100
#define CM_PRINT_SELECTION 0x200

#define CM_BORDER_NONE 0
#define CM_BORDER_THIN 1
#define CM_BORDER_CLIENT 2
#define CM_BORDER_STATIC 4
#define CM_BORDER_MODAL 8
#define CM_BORDER_CORRAL (CM_BORDER_MODAL | CM_BORDER_CLIENT)

#define CM_KEY_SHIFT 0x1
#define CM_KEY_CTRL 0x2
#define CM_KEY_ALT 0x4

#define CM_BTN_LEFT 0x1
#define CM_BTN_RIGHT 0x2
#define CM_BTN_MIDDLE 0x4

#define CM_BINARY 2
#define CM_OCTAL 8
#define CM_DECIMAL 10
#define CM_HEXADECIMAL 16

#define CME_SUCCESS 1
#define CME_FAILURE 0
#define CME_BADARGUMENT -1

#define CM_NOWHERE 0
#define CM_HSPLITTER 1
#define CM_VSPLITTER 2
#define CM_HVSPLITTER 3
#define CM_EDITSPACE 4
#define CM_HSCROLLBAR 5
#define CM_VSCROLLBAR 6
#define CM_SIZEBOX 7
#define CM_LEFTMARGIN 8

/* ---- AddIns Structs */
typedef struct _ADDINCONTEXT
{
    long Version;
    long NbrChilds;
    long ActiveProject;
    HINSTANCE hInstance;
    long OSType;
    long FullScreenMode;
    long SysTrayMode;
    HWND hMDI;
    HWND hClient;
    HACCEL hAccelerators;
    HWND hTreeView;
    HWND hWindowsList;
    HWND hStatusBar;
    HWND hOutputBox;
    HWND hDebugBox;
    HWND hOutputSysTab;
    HWND hCurrentChild;
    HWND hCurrentCodeMax;
    HWND hRebar;
    HIMAGELIST hEmptyImageList;
    HIMAGELIST hMainImageList;
    HIMAGELIST hLittleImageList;
    HIMAGELIST hControlsImageList;
    HIMAGELIST hDialogEdImageList;
    WNDPROC MDIhWndProc;
    void (CALLBACK *ChildCreateProc)(HWND);
    WNDPROC ChildhWndProc;
    WNDPROC CodeMaxhWndProc;
    HWND hProjectToolbar;
    HWND hProjectPager;
    HWND hWindowsToolbar;
    HWND hWindowsPager;
    HWND hOutputBoxToolbar;
    HWND hOutputBoxPager;
    long ColdStart;
} ADDINCONTEXT, *LPADDINCONTEXT;

typedef struct _MINICHILDDAT
{
    HWND hChildCodeMax;
    char *FileName;
    char *Language;
    long ReadOnly;
    long FileLoaded;
    long ModifFlag;
} MINICHILDDAT, *LPMINICHILDDAT;

typedef struct _SPLITTERDAT
{
    HWND hClient;
    HWND hparent;
    long Orientation;
    long Sizing;
    long MinLeftTop;
    long MaxRightBottom;
    long SplitBarSize;
    long StartupPos;
    long OldXPos;
    long OldYPos;
    long OldWndProc;
    long StartDragX;
    long StartDragY;
    long DisplacementX;
    long DisplacementY;
} SPLITTERDAT, *LPSPLITTERDAT;

typedef struct _GRIPBOXDAT
{
    HWND TopLeftBox;
    HWND TopBox;
    HWND TopRightBox;
    HWND BottomLeftBox;
    HWND BottomBox;
    HWND BottomRightBox;
    HWND LeftBox;
    HWND RightBox;
} GRIPBOXDAT, *LPGRIPBOXDAT;

typedef struct _BACKDC
{
    HWND hWnd;
    COLORREF Color;
    HDC hDC;
    HBITMAP Bitmap;
    HGDIOBJ OldObject;
} BACKDC, *LPBACKDC;

typedef struct _FILTERFILE
{
    long FileLength;
    HGLOBAL FileMem;
} FILTERFILE, *LPFILTERFILE;

/* ---- Library served functions */
typedef struct _CHROMATICLIB
{
/* Standard Functions */
HWND (CALLBACK *CreateSplashDialog)(long, long, long, long, char *, HWND, HMENU, HICON, void (CALLBACK *)(HWND), WNDPROC, long, long, long);
long (CALLBACK *CreateModalDialog)(long, long, long, long, HWND, DLGPROC, long, long);
HWND (CALLBACK *CreateNonModalDialog)(long, long, long, long, HWND, HMENU, HICON, char *, void (CALLBACK *)(HWND), WNDPROC, long, long, long);
HWND (CALLBACK *CreateSplitter)(long, long, long, long, LPSPLITTERDAT, WNDPROC);
HWND (CALLBACK *CreateMDIDialog)(long, long, long, long, HWND, HMENU, HICON, char *, void (CALLBACK *)(HWND), WNDPROC, long, long);
HWND (CALLBACK *CreateMDIChildDialog)(HWND, char *, HICON, void (CALLBACK *)(HWND), WNDPROC, long, long, char *);
HWND (CALLBACK *CreateToolBar)(long, long, long, long, HWND, HIMAGELIST, long, long, long, long, long);
HIMAGELIST (CALLBACK *CreateImageList)(long, long, long);
HWND (CALLBACK *CreateSysTab)(long, long, long, long, HWND, long, WNDPROC, HIMAGELIST, long);
HWND (CALLBACK *CreateTrackBar)(long, long, long, long, HWND, long, WNDPROC, long, long, long);
HWND (CALLBACK *CreateUpDown)(long, long, long, long, HWND, long, WNDPROC, long);
HWND (CALLBACK *CreateProgressBar)(long, long, long, long, HWND, long, WNDPROC, long, long, long);
HWND (CALLBACK *CreateStatusBar)(char *, long, HWND, long, WNDPROC, long);
HWND (CALLBACK *CreateColorBox)(long, long, long, long, HWND, long, COLORREF, long);
LPGRIPBOXDAT (CALLBACK *CreateGripBox)(long, long, long, long, HWND, long, COLORREF, long);
HWND (CALLBACK *CreateLabel)(long, long, long, long, HWND, char *, long, WNDPROC, long, HFONT);
HWND (CALLBACK *CreatePictureBox)(long, long, long, long, HWND, HGDIOBJ, long, long, WNDPROC, long);
HWND (CALLBACK *CreateFrame)(long, long, long, long, HWND, char *, long, WNDPROC, long);
HWND (CALLBACK *CreateButton)(long, long, long, long, HWND, char *, long, long, HICON, WNDPROC, long, long);
HWND (CALLBACK *CreateIPBox)(long, long, long, long, HWND, long, long, WNDPROC, long, long, HFONT);
HWND (CALLBACK *CreateRichTextBox)(long, long, long, long, HWND, char *, long, WNDPROC, long, long);
HWND (CALLBACK *CreateHexBox)(long, long, long, long, HWND, char *, long, long, long, long);
HWND (CALLBACK *CreateCheckBox)(long, long, long, long, HWND, char *, long, WNDPROC, long, long);
HWND (CALLBACK *CreateRebar)(long, long, long, long, HWND, WNDPROC, long, long);
HWND (CALLBACK *CreatePager)(long, long, long, long, HWND, HWND, long, long);
HWND (CALLBACK *CreateClient)(HWND, HMENU, HICON);
HWND (CALLBACK *CreateRadioButton)(long, long, long, long, HWND, char *, long, WNDPROC, long);
HWND (CALLBACK *CreateListView)(long, long, long, long, HWND, long, HIMAGELIST, WNDPROC, long, long, long);
HWND (CALLBACK *CreateTreeView)(long, long, long, long, HWND, long, HIMAGELIST, WNDPROC, long, long);
HWND (CALLBACK *CreateComboBox)(long, long, long, long, HWND, char *, long, WNDPROC, long);
HWND (CALLBACK *CreateListBox)(long, long, long, long, HWND, long, WNDPROC, long, long, long);
HWND (CALLBACK *CreateScrollBar)(long, long, long, long, HWND, long, WNDPROC, long);
HWND (CALLBACK *CreateDumpBox)(long, long, long, long, HWND, long, HFONT, long, long, long, long, WNDPROC, long, long);
long (CALLBACK *CreateStockModalDialog)(long, long, long, long, long, HWND, char *, DLGPROC, long);
HWND (CALLBACK *CreateTextBox)(long, long, long, long, HWND, char *, long, WNDPROC, long, long);
HWND (CALLBACK *CreateDockingBox)(char *, WNDPROC);
long (CALLBACK *DialogSetIcon)(HWND, HICON);
long (CALLBACK *DialogGetXUnit)(void);
long (CALLBACK *DialogGetYUnit)(void);
long (CALLBACK *DialogXPixelToUnit)(long, long);
long (CALLBACK *DialogYPixelToUnit)(long, long);
long (CALLBACK *DialogXUnitToPixel)(long, long);
long (CALLBACK *DialogYUnitToPixel)(long, long);
long (CALLBACK *ToolBarAddButton)(HWND, char *, long, long, long, long, long);
long (CALLBACK *ToolBarGetButton)(HWND, long, LPTBBUTTON);
long (CALLBACK *ToolBarGetButtonXSize)(HWND);
long (CALLBACK *ToolBarGetButtonYSize)(HWND);
long (CALLBACK *ToolBarGetButtonsCount)(HWND);
long (CALLBACK *ToolBarGetRowsCount)(HWND);
HIMAGELIST (CALLBACK *ToolBarGetImagelist)(HWND);
long (CALLBACK *ToolBarAddSeparator)(HWND, long);
long (CALLBACK *ToolBarGetNotifiedToolTip)(long);
long (CALLBACK *ToolBarGetNotifiedDropDownItem)(long);
void (CALLBACK *ToolBarDisplayToolTip)(char *, long);
long (CALLBACK *ToolBarResize)(HWND);
long (CALLBACK *ToolBarSetButtonPressed)(HWND, long, long);
long (CALLBACK *ToolBarSetButtonChecked)(HWND, long, long);
long (CALLBACK *ToolBarSetButtonEnabled)(HWND, long, long);
long (CALLBACK *ToolBarIsButtonPressed)(HWND, long);
long (CALLBACK *ToolBarIsButtonChecked)(HWND, long);
long (CALLBACK *ToolBarDisplayPopupMenu)(HWND, long, HMENU, HWND);
long (CALLBACK *ToolBarGetXSize)(HWND);
long (CALLBACK *ToolBarGetYSize)(HWND);
long (CALLBACK *ToolBarGetButtonXPosition)(HWND, long);
long (CALLBACK *ToolBarGetXYSize)(HWND, LPSIZE);
long (CALLBACK *ToolBarGetRealPos)(HWND, LPPOINT);
long (CALLBACK *ToolBarGetButtonXYPos)(HWND, long, LPPOINT);
long (CALLBACK *ToolBarGetButtonIndexXSize)(HWND, long);
long (CALLBACK *ToolBarGetXPadding)(HWND);
long (CALLBACK *ToolBarGetYPadding)(HWND);
long (CALLBACK *ToolBarGetNotifiedHotItem)(long);
long (CALLBACK *ToolBarRemoveButton)(HWND, long);
long (CALLBACK *ToolBarSetButtonBitmap)(HWND, long, long);
void (CALLBACK *ImageListDestroy)(HIMAGELIST);
long (CALLBACK *ImageListAddIcon)(HIMAGELIST, long);
long (CALLBACK *ImageListGetIconsCount)(HIMAGELIST);
HICON (CALLBACK *ImageListGetIcon)(HIMAGELIST, long);
long (CALLBACK *SysTabAddItem)(HWND, char *,long, long);
long (CALLBACK *SysTabGetCurrentItem)(HWND);
HIMAGELIST (CALLBACK *SysTabGetImagelist)(HWND);
long (CALLBACK *SysTabSetCurrentItem)(HWND, long);
long (CALLBACK *SysTabSetFocusItem)(HWND, long);
long (CALLBACK *SysTabHighLightItem)(HWND, long, long);
long (CALLBACK *SysTabItemsCount)(HWND);
long (CALLBACK *SysTabGetRowsCount)(HWND);
long (CALLBACK *SysTabSetSeparators)(HWND, long);
long (CALLBACK *SysTabSetItemsSize)(HWND, long, long);
long (CALLBACK *SysTabRemoveItem)(HWND, long);
long (CALLBACK *SysTabSetMinWidth)(HWND, long);
long (CALLBACK *SysTabSetPadding)(HWND, long, long);
long (CALLBACK *TrackBarSetRange)(HWND, long, long, long);
long (CALLBACK *TrackBarSetPos)(HWND, long);
long (CALLBACK *TrackBarGetPos)(HWND);
long (CALLBACK *TrackBarSetTicks)(HWND, long);
HWND (CALLBACK *TrackBarGetToolTips)(HWND);
long (CALLBACK *ProgressBarSetRange)(HWND, long, long);
long (CALLBACK *ProgressBarSetRelPos)(HWND, long);
long (CALLBACK *StatusBarSetParts)(HWND, long, long *);
long (CALLBACK *StatusBarSetText)(HWND, long, long, char *, long);
long (CALLBACK *StatusBarGetYSize)(HWND);
COLORREF (CALLBACK *ColorBoxGetColor)(HWND);
long (CALLBACK *ColorBoxSetColor)(HWND, COLORREF);
COLORREF (CALLBACK *GripBoxGetColor)(LPGRIPBOXDAT);
void (CALLBACK *GripBoxSetColor)(LPGRIPBOXDAT, COLORREF);
void (CALLBACK *GripBoxClose)(LPGRIPBOXDAT);
void (CALLBACK *GripBoxVisible)(LPGRIPBOXDAT, long);
void (CALLBACK *GripBoxResize)(LPGRIPBOXDAT, LPRECT);
HGDIOBJ (CALLBACK *LabelGetImage)(HWND, long);
long (CALLBACK *PictureBoxChangeIcon)(HWND, HICON);
long (CALLBACK *PictureBoxChangeImage)(HWND, HANDLE);
long (CALLBACK *FrameRefreshToolbar)(HWND);
long (CALLBACK *ButtonSetIcon)(HWND, long, HICON);
HANDLE (CALLBACK *ButtonGetImage)(HWND, long);
long (CALLBACK *ButtonGetState)(HWND);
long (CALLBACK *IPBoxClearIP)(HWND);
long (CALLBACK *IPBoxGetIP)(HWND);
long (CALLBACK *IPBoxSetIP)(HWND, long);
long (CALLBACK *IPBoxSetFocus)(HWND, long);
long (CALLBACK *IPBoxSetRange)(HWND, long, long, long);
long (CALLBACK *IPBoxIsBlank)(HWND) ;
long (CALLBACK *TextBoxGetLen)(HWND);
long (CALLBACK *TextBoxSetMaxLen)(HWND, long);
long (CALLBACK *TextBoxGetMaxLen)(HWND);
long (CALLBACK *TextBoxGetTextHandle)(HWND);
void (CALLBACK *TextBoxAddText)(HWND, char *);
long (CALLBACK *TextBoxSelText)(HWND, long);
long (CALLBACK *TextBoxRemoveSel)(HWND);
long (CALLBACK *TextBoxSetCaretPos)(HWND, long);
long (CALLBACK *TextBoxLinesCount)(HWND);
long (CALLBACK *TextBoxGetMarginWidth)(HWND);
long (CALLBACK *TextBoxGetFirstVisibleLine)(HWND);
long (CALLBACK *TextBoxIsModified)(HWND);
long (CALLBACK *TextBoxGetCurrentOptions)(HWND);
char * (CALLBACK *TextBoxGetPasswordChar)(HWND);
long (CALLBACK *TextBoxSetPasswordChar)(HWND, char *);
long (CALLBACK *TextBoxGetSelection)(HWND);
long (CALLBACK *TextBoxGetScrollPos)(HWND);
long (CALLBACK *TextBoxGetBreakProcAddress)(HWND);
long (CALLBACK *TextBoxCanPaste)(HWND);
long (CALLBACK *TextBoxCanUndo)(HWND);
long (CALLBACK *CheckBoxGetState)(HWND);
long (CALLBACK *CheckBoxSetState)(HWND, long);
long (CALLBACK *RebarAddBand)(HWND, HWND, char *, long, long, long);
long (CALLBACK *RebarRemoveBand)(HWND, long);
long (CALLBACK *RebarGetXSize)(HWND);
long (CALLBACK *RebarGetYSize)(HWND);
long (CALLBACK *RebarResize)(HWND);
long (CALLBACK *RebarSetBackColor)(HWND, COLORREF);
long (CALLBACK *RebarSetTextColor)(HWND, COLORREF);
long (CALLBACK *RebarBandVisible)(HWND, long, long);
long (CALLBACK *RebarGetBandsCount)(HWND);
long (CALLBACK *RebarGetHeight)(HWND);
COLORREF (CALLBACK *RebarGetBackGroundColor)(HWND);
long (CALLBACK *RebarGetRowsCount)(HWND);
long (CALLBACK *RebarGetToolTips)(HWND);
COLORREF (CALLBACK *RebarGetTextColor)(HWND);
long (CALLBACK *RebarGetPalette)(HWND);
HIMAGELIST (CALLBACK *RebarGetImageList)(HWND);
void (CALLBACK *PagerDisplaySetSize)(LPNMPGCALCSIZE, LPSIZE);
long (CALLBACK *PagerMaximizeX)(HWND, long);
long (CALLBACK *PagerMaximizeY)(HWND, long);
HWND (CALLBACK *PagerGetNotifiedChild)(long);
long (CALLBACK *PagerSetBackColor)(HWND, COLORREF);
COLORREF (CALLBACK *PagerGetBackColor)(HWND);
long (CALLBACK *PagerGetBorderSize)(HWND);
long (CALLBACK *PagerGetButtonSize)(HWND);
long (CALLBACK *PagerGetScrollPos)(HWND);
long (CALLBACK *PagerGetOrientation)(HWND);
long (CALLBACK *PagerSetOrientation)(HWND, long);
long (CALLBACK *PagerChangeOrientation)(HWND, LPNMPGCALCSIZE, long, LPSIZE);
long (CALLBACK *ClientResize)(HWND, long, long, long, long);
HWND (CALLBACK *ClientGetActiveChild)(HWND);
HWND (CALLBACK *ClientSetNextChild)(HWND);
HWND (CALLBACK *ClientSetPreviousChild)(HWND);
long (CALLBACK *ClientTileHorizontal)(HWND);
long (CALLBACK *ClientTileVertical)(HWND);
long (CALLBACK *ClientTileCascade)(HWND);
long (CALLBACK *ClientTileArrangeIconic)(HWND);
long (CALLBACK *RadioButtonGetState)(HWND);
long (CALLBACK *RadioButtonSetState)(HWND, long);
long (CALLBACK *ListViewAddCol)(HWND, char *, long, long);
long (CALLBACK *ListViewSetColWidth)(HWND, long, long);
long (CALLBACK *ListViewGetColWidth)(HWND, long);
long (CALLBACK *ListViewSetScroll)(HWND, long, long);
long (CALLBACK *ListViewClear)(HWND);
long (CALLBACK *ListViewDetachImageList)(HWND);
long (CALLBACK *ListViewAddItem)(HWND, char *, long, long);
long (CALLBACK *ListViewDeleteItem)(HWND, long);
long (CALLBACK *ListViewSetSubItem)(HWND, char *, long, long);
long (CALLBACK *ListViewSetSubItemImage)(HWND, long, long, long);
long (CALLBACK *ListViewGetSubItemImage)(HWND, long, long);
long (CALLBACK *ListViewEditValidated)(long);
char * (CALLBACK *ListViewGetEditResult)(long);
long (CALLBACK *ListViewItemCount)(HWND);
long (CALLBACK *ListViewSelItemCount)(HWND);
long (CALLBACK *ListViewMultiSelFirstItem)(HWND);
long (CALLBACK *ListViewGetItemSelState)(HWND, long);
HWND (CALLBACK *ListViewSetEditModeOn)(HWND, long, long);
long (CALLBACK *ListViewSetItemSel)(HWND, long);
long (CALLBACK *ListViewSetItemHighlight)(HWND, long, long);
long (CALLBACK *ListViewSetItemFocus)(HWND, long);
long (CALLBACK *ListViewGetItemUnderCursor)(HWND);
long (CALLBACK *ListViewGetFirstFocusItem)(HWND);
long (CALLBACK *ListViewGetSelItem)(HWND, long);
char * (CALLBACK *ListViewGetSelItemText)(HWND, long);
long (CALLBACK *ListViewSetSelItemText)(HWND, char *, long);
long (CALLBACK *ListViewCheckBoxItemDoubleClick)(HWND);
char * (CALLBACK *ListViewGetItemText)(HWND, long, long);
HICON (CALLBACK *ListViewGetItemIcon)(HWND, long, long);
long (CALLBACK *ListViewGetNotifiedColumnIndex)(long);
long (CALLBACK *ListViewSort)(HWND, long, PFNLVCOMPARE);
long (CALLBACK *ListViewReOrder)(HWND);
char * (CALLBACK *ListViewGetHeaderLabel)(HWND, long);
long (CALLBACK *ListViewGetHeaderPosition)(HWND, long);
long (CALLBACK *ListViewSetHeaderPosition)(HWND, long, long);
long (CALLBACK *ListViewSetBackColor)(HWND, COLORREF);
COLORREF (CALLBACK *ListViewGetBackColor)(HWND);
COLORREF (CALLBACK *ListViewGetTextBackColor)(HWND);
COLORREF (CALLBACK *ListViewGetTextColor)(HWND);
long (CALLBACK *ListViewGetToolTips)(HWND);
long (CALLBACK *ListViewGetTopIndex)(HWND);
long (CALLBACK *ListViewGetCountPerPage)(HWND);
HWND (CALLBACK *ListViewGetEditControl)(HWND);
long (CALLBACK *ListViewGetExStyle)(HWND);
HWND (CALLBACK *ListViewGetSysHeader)(HWND);
long (CALLBACK *ListViewGetHotCursor)(HWND);
HIMAGELIST (CALLBACK *ListViewGetImageList)(HWND, long);
long (CALLBACK *ListViewSetItemCheckbox)(HWND, long, long);
long (CALLBACK *ListViewGetItemCheckbox)(HWND, long);
long (CALLBACK *ListViewIsCheckboxNotify)(HWND, long);
long (CALLBACK *ListViewFindItem)(HWND, char *);
long (CALLBACK *ListViewFindSubItem)(HWND, char *, long, long);
long (CALLBACK *ListViewBeginDrag)(long, HWND, LPPOINT);
long (CALLBACK *ListViewMoveDrag)(LPPOINT);
void (CALLBACK *ListViewEndDrag)(HWND);
long (CALLBACK *ListViewPasteAutoEdit)(HWND, long, long);
long (CALLBACK *TreeViewAddItem)(HWND, char *, HTREEITEM, HTREEITEM, long, long, long, long);
long (CALLBACK *TreeViewSetToolTips)(HWND, long);
long (CALLBACK *TreeViewGetToolTips)(HWND);
long (CALLBACK *TreeViewSetIndent)(HWND, long);
long (CALLBACK *TreeViewRemoveItem)(HWND, HTREEITEM);
long (CALLBACK *TreeViewSetBackColor)(HWND, COLORREF);
long (CALLBACK *TreeViewGetExpandingState)(long);
HTREEITEM (CALLBACK *TreeViewGetExpandingItem)(long);
HTREEITEM (CALLBACK *TreeViewGetDeletedItem)(long);
long (CALLBACK *TreeViewSetItemIcon)(HWND, HTREEITEM, long);
long (CALLBACK *TreeViewSetItemExpandedState)(HWND, HTREEITEM, long);
long (CALLBACK *TreeViewGetItemExpandedState)(HWND, HTREEITEM);
long (CALLBACK *TreeViewSetSingleExpandState)(HWND, long);
HTREEITEM (CALLBACK *TreeViewGetSelectedItem)(HWND);
HTREEITEM (CALLBACK *TreeViewGetItemFromPos)(HWND, long, long);
long (CALLBACK *TreeViewSetSelectedItem)(HWND, HTREEITEM);
char * (CALLBACK *TreeViewGetItemText)(HWND, HTREEITEM);
long (CALLBACK *TreeViewSetItemText)(HWND, HTREEITEM, char *);
HTREEITEM (CALLBACK *TreeViewGetItemParent)(HWND, HTREEITEM);
HTREEITEM (CALLBACK *TreeViewGetRoot)(HWND);
long (CALLBACK *TreeViewGetItemCount)(HWND);
long (CALLBACK *TreeViewGetVisibleCount)(HWND);
HTREEITEM (CALLBACK *TreeViewGetFirstItemChild)(HWND, HTREEITEM);
HTREEITEM (CALLBACK *TreeViewGetNextItem)(HWND, HTREEITEM);
HTREEITEM (CALLBACK *TreeViewGetPreviousItem)(HWND, HTREEITEM);
long (CALLBACK *TreeViewSearchItemText)(HWND, HTREEITEM, char *);
long (CALLBACK *TreeViewSearchChildPartialText)(HWND, HTREEITEM, char *);
long (CALLBACK *TreeViewGetChildItemsCount)(HWND, HTREEITEM);
long (CALLBACK *TreeViewGetSelChildItemPos)(HWND, HTREEITEM, HTREEITEM);
long (CALLBACK *TreeViewGetItemLevel)(HWND, HTREEITEM);
COLORREF (CALLBACK *TreeViewGetBackColor)(HWND);
HWND (CALLBACK *TreeViewGetEditControl)(HWND);
HIMAGELIST (CALLBACK *TreeViewGetImageList)(HWND, long);
long (CALLBACK *TreeViewGetIndent)(HWND);
COLORREF (CALLBACK *TreeViewGetInsertMarkColor)(HWND);
COLORREF (CALLBACK *TreeViewGetLineColor)(HWND);
COLORREF (CALLBACK *TreeViewGetTextColor)(HWND);
long (CALLBACK *TreeViewGetItemHeight)(HWND);
long (CALLBACK *TreeViewGetScrollTime)(HWND);
long (CALLBACK *TreeViewGetItemTextRect)(HWND, HTREEITEM, LPRECT);
long (CALLBACK *TreeViewGetItemRect)(HWND, HTREEITEM, LPRECT);
long (CALLBACK *ComboBoxAddItem)(HWND, char *, long);
long (CALLBACK *ComboBoxDeleteItem)(HWND, long);
long (CALLBACK *ComboBoxReset)(HWND);
long (CALLBACK *ComboBoxSetMaxLen)(HWND, long);
long (CALLBACK *ComboBoxCount)(HWND);
long (CALLBACK *ComboBoxGetIndex)(HWND);
long (CALLBACK *ComboBoxSetIndex)(HWND, long);
char * (CALLBACK *ComboBoxGetItem)(HWND, long);
char * (CALLBACK *ComboBoxGetCurrentItem)(HWND);
long (CALLBACK *ComboBoxItemExist)(HWND, char *);
long (CALLBACK *ComboBoxGetItemData)(HWND, long);
void (CALLBACK *ComboBoxSaveInIniFile)(HWND, char *, char *, char *);
void (CALLBACK *ComboBoxFillFromIniFile)(HWND, char *, char *);
long (CALLBACK *ListBoxAddItem)(HWND, char *, long);
long (CALLBACK *ListBoxReset)(HWND);
long (CALLBACK *ListBoxSetHorzScrollWidth)(HWND, long);
long (CALLBACK *ListBoxSetColumnsWidth)(HWND, long);
long (CALLBACK *ListBoxCount)(HWND);
long (CALLBACK *ListBoxGetTopIndex)(HWND);
long (CALLBACK *ListBoxSetTopIndex)(HWND, long);
long (CALLBACK *ListBoxSetItemData)(HWND, long, long);
long (CALLBACK *ListBoxGetItemData)(HWND, long);
long (CALLBACK *ListBoxIsItemSelected)(HWND, long);
long (CALLBACK *ListBoxGetSelItemIndex)(HWND);
long (CALLBACK *ListBoxSetIndex)(HWND, long);
char * (CALLBACK *ListBoxGetCurrentItem)(HWND);
char * (CALLBACK *ListBoxGetItem)(HWND, long);
long (CALLBACK *ListBoxDeleteItem)(HWND, long);
long (CALLBACK *ListBoxReplaceItem)(HWND, long, char *);
long (CALLBACK *ListBoxReplaceSelItem)(HWND, char *);
void (CALLBACK *ListBoxProcessDrag)(HWND, long, long, long);
long (CALLBACK *ListBoxSelItemDown)(HWND);
long (CALLBACK *ListBoxSelItemUp)(HWND);
long (CALLBACK *ListBoxSelItemRemove)(HWND);
long (CALLBACK *ListBoxItemExist)(HWND, char *);
long (CALLBACK *ListBoxItemUnderCursor)(HWND);
long (CALLBACK *ScrollBarGetMinRange)(HWND, long);
long (CALLBACK *ScrollBarGetMaxRange)(HWND, long);
long (CALLBACK *ScrollBarGetPageRange)(HWND, long);
long (CALLBACK *ScrollBarSetPageRange)(HWND, long, long);
void (CALLBACK *ScrollBarShowHide)(HWND, long, long, long);
long (CALLBACK *ScrollBarSetMinMaxRange)(HWND, long, long, long);
void (CALLBACK *DumpBoxResize)(HWND, long, long, long, long);
long (CALLBACK *DumpBoxScrollDown)(HWND, long, long, long);
long (CALLBACK *DumpBoxScrollUp)(HWND, long, long, long);
long (CALLBACK *DumpBoxGetVisibleLines)(HWND, long, long);
long (CALLBACK *DumpBoxGetVisibleColumns)(HWND, long, long);
long (CALLBACK *DockingBoxGetState)(HWND);
void (CALLBACK *DockingBoxRemove)(HWND);
void (CALLBACK *DockingBoxShow)(HWND, int, int, int);
void (CALLBACK *DockingBoxWasVisible)(char *);
char * (CALLBACK *MenuGetString)(HMENU, long);
long (CALLBACK *MenuEnable)(HMENU, long, long);
long (CALLBACK *MenuSetDefaultItem)(HMENU, long);
long (CALLBACK *MenuSetItemState)(HMENU, long, long);
long (CALLBACK *MenuSetItemType)(HMENU, long, long);
long (CALLBACK *MenuSetItemText)(HMENU, char *, long);
long (CALLBACK *MenuAddSeparator)(HMENU);
long (CALLBACK *MenuAddString)(HMENU, char *, long, long);
long (CALLBACK *ScreenWidth)(void);
long (CALLBACK *ScreenHeight)(void);
void (CALLBACK *ScreenRectToClient)(HWND, LPRECT);
HCURSOR (CALLBACK *CursorSetWait)(void);
HCURSOR (CALLBACK *CursorSetNo)(void);
HCURSOR (CALLBACK *CursorSetCross)(void);
HCURSOR (CALLBACK *CursorSetNormal)(void);
long (CALLBACK *CursorDisable)(void);
long (CALLBACK *CursorEnable)(long);
char * (CALLBACK *IniReadKey)(char *, char *, char *);
long (CALLBACK *IniReadBoolKey)(char *, char *, char *);
long (CALLBACK *IniWriteSection)(char *, char *, char *);
long (CALLBACK *IniDeleteKey)(char *, char *, char *);
long (CALLBACK *IniWriteKey)(char *, char *, char *, char *);
long (CALLBACK *MathGenerateRandomNumber)(long);
char * (CALLBACK *DateGetNow)(long);
char * (CALLBACK *DateGetYear)(void);
char * (CALLBACK *DateGetMonth)(void);
char * (CALLBACK *DateGetDay)(void);
char * (CALLBACK *DateGetHour)(void);
char * (CALLBACK *DateGetMinutes)(void);
char * (CALLBACK *DateGetSeconds)(void);
char * (CALLBACK *DateGetFormat)(char *);
char * (CALLBACK *DateGetTimeFormat)(char *);
long (CALLBACK *StringIsLabel)(char *, int);
long (CALLBACK *StringIsHexaDecimal)(char *);
long (CALLBACK *StringIsDecimal)(char *, long);
long (CALLBACK *StringIsLabelChar)(char *);
long (CALLBACK *StringIsDigitChar)(char *);
long (CALLBACK *StringIsHexaChar)(char *);
long (CALLBACK *StringIsAlphaChar)(char *);
long (CALLBACK *StringIsBlankChar)(char *);
long (CALLBACK *StringIsOpenBracketChar)(char *);
long (CALLBACK *StringIsUnderLineChar)(char *);
long (CALLBACK *StringIsDotChar)(char *);
long (CALLBACK *StringIsCommaChar)(char *);
long (CALLBACK *StringIsQuoteChar)(char *);
long (CALLBACK *StringIsArobasChar)(char *);
long (CALLBACK *StringIsSpaceChar)(char *);
long (CALLBACK *StringIsEOL)(char *);
char * (CALLBACK *StringNumberComplement)(long,long);
char * (CALLBACK *StringHexNumberComplement)(long,long);
char * (CALLBACK *StringOctNumberComplement)(long,long);
char * (CALLBACK *StringBinNumberComplement)(long,long);
long (CALLBACK *StringCount)(char *, char *, long, long);
char * (CALLBACK *StringReplace)(char *, char *,char *, long, long, long);
char * (CALLBACK *StringHex32)(long);
char * (CALLBACK *StringHex16)(long);
char * (CALLBACK *StringHex8)(long);
long * (CALLBACK *StringSplit)(char *, char *);
long (CALLBACK *StringGetSplitUBound)(long *);
char * (CALLBACK *StringGetSplitElement)(char *, long *, long);
void (CALLBACK *StringReleaseSplit)(long *);
char * (CALLBACK *StringJoin)(char *, long *, char *, long,long);
long (CALLBACK *StringFree)(char *);
long (CALLBACK *StringLen)(char *);
char * (CALLBACK *StringCat)(char *, char *);
char * (CALLBACK *StringDecToString)(long);
long (CALLBACK *StringStringToDec)(char *);
long (CALLBACK *StringStringToHex)(char *);
long (CALLBACK *StringCountLines)(char *, long);
long (CALLBACK *StringGetLinesOffsets)(char *);
long (CALLBACK *StringFilterNonPrintableChars)(long,long);
char * (CALLBACK *StringLeft)(char *, long);
char * (CALLBACK *StringRight)(char *, long Dat);
char * (CALLBACK *StringTrim)(char *);
char * (CALLBACK *StringLTrim)(char *);
char * (CALLBACK *StringRTrim)(char *);
long (CALLBACK *StringInStr)(char *, long, char *, long);
char * (CALLBACK *StringMid)(char *, long, long);
char * (CALLBACK *StringUpperCase)(char *);
char * (CALLBACK *StringLowerCase)(char *);
char * (CALLBACK *StringReverse)(char *);
char * (CALLBACK *StringSpace)(long);
char * (CALLBACK *StringString)(long, long);
long (CALLBACK *StringIsNumeric)(char *);
void (CALLBACK *StringFillHexBytes)(void *, char *, long, long, long, long, long);
void (CALLBACK *StringFillHexWords)(void *, char *, long, long, long, long, long);
void (CALLBACK *StringFillHexDWords)(void *, char *, long, long, long, long, long);
void (CALLBACK *StringFileNameToLabel)(char *);
long (CALLBACK *FileGetWriteTime)(char *, LPFILETIME);
long (CALLBACK *FileGetCreationTime)(char *, LPFILETIME);
long (CALLBACK *FileGetAccessedTime)(char *, LPFILETIME);
char * (CALLBACK *FileGetExtension)(char *);
char * (CALLBACK *FileRemoveExtension)(char *);
char * (CALLBACK *FileReplaceExtension)(char *, char *);
char * (CALLBACK *FileGetDirectory)(char *);
char * (CALLBACK *FileGetFileName)(char *);
HANDLE (CALLBACK *FileOpenR)(char *);
HANDLE (CALLBACK *FileOpenW)(char *, long);
HANDLE (CALLBACK *FileOpenWAppend)(char *);
long (CALLBACK *FileClose)(HANDLE);
HANDLE (CALLBACK *FileCreateEmpty)(char *, long);
long (CALLBACK *FileWriteBuffer)(HANDLE, LPCVOID, long);
long (CALLBACK *FileWriteLine)(HANDLE, char *);
long (CALLBACK *FileIsDirectory)(char *);
long (CALLBACK *FileGetSize)(char *);
long (CALLBACK *FileExist)(char *);
long (CALLBACK *FileIsReadOnly)(char *);
long (CALLBACK *FileIsUnix)(char *);
HGLOBAL (CALLBACK *FileLoadIntoMem)(char *, long *);
long (CALLBACK *FileSaveFromMem)(char *, long, long);
char * (CALLBACK *FileDir)(char *, long);
long (CALLBACK *RegistryUpdateKey)(HKEY, char *, char *, char *, long);
long (CALLBACK *RegistryDeleteKey)(HKEY, char *, char *, long);
char * (CALLBACK *RegistryGetKeyValue)(HKEY, char *, char *);
void (CALLBACK *GDIFillWindow)(HWND, COLORREF);
void (CALLBACK *GDIFillWindowFromBrush)(HWND, HBRUSH);
void (CALLBACK *GDIFillWindowFromBrushAndhDC)(HWND, HDC, HBRUSH);
HBRUSH (CALLBACK *GDICreateColorBrush)(COLORREF);
HFONT (CALLBACK *GDIObtainFont)(char *, long, HWND, long, long);
void (CALLBACK *GDIDrawHorzSep)(HWND, long, long, long);
void (CALLBACK *GDIDrawVertSep)(HWND, long, long, long);
void (CALLBACK *GDIDrawLine)(HWND, long, long, long, long, COLORREF);
void (CALLBACK *GDIDrawLineXOR)(HWND, long, long, long, long, COLORREF);
long (CALLBACK *GDIDrawPixel)(HWND, long, long, long);
void (CALLBACK *GDIWriteText)(HDC, long, long, char *, long, HFONT, long, long);
void (CALLBACK *GDIWriteClippedText)(HDC, long, long, long, long, char *, long, HFONT, long, long);
long (CALLBACK *GDIGetTextWidth)(HWND, HFONT, char *);
long (CALLBACK *GDIGetTextHeight)(HWND, HFONT, char *);
long (CALLBACK *GDIGetFontWidth)(HWND, HFONT);
long (CALLBACK *GDIGetFontHeight)(HWND, HFONT);
HDC (CALLBACK *GDICreateBackDC)(LPBACKDC);
void (CALLBACK *GDIDestroyBackDC)(LPBACKDC);
long (CALLBACK *GDIBlitBackDC)(LPRECT, LPBACKDC);
long (CALLBACK *GDIColorCalcLuminosity)(COLORREF, long);
HFONT (CALLBACK *GDIGetSerif)(void);
HFONT (CALLBACK *GDIGetSerif10)(void);
HFONT (CALLBACK *GDIGetCourierNew9)(void);
long (CALLBACK *ControlNextHook)(HWND, UINT, WPARAM, LPARAM);
long (CALLBACK *ControlSendMessage)(HWND, long, long);
long (CALLBACK *ControlClientTop)(HWND);
long (CALLBACK *ControlClientLeft)(HWND);
long (CALLBACK *ControlClientWidth)(HWND);
long (CALLBACK *ControlClientHeight)(HWND);
long (CALLBACK *ControlBringToTop)(HWND);
long (CALLBACK *ControlBringToBottom)(HWND);
long (CALLBACK *ControlSetTopMost)(HWND);
long (CALLBACK *ControlRemTopMost)(HWND);
void (CALLBACK *ControlRefresh)(HWND);
void (CALLBACK *ControlRefreshLocal)(HWND);
void (CALLBACK *ControlRepaint)(HWND);
long (CALLBACK *ControlResize)(HWND, long, long, long, long);
long (CALLBACK *ControlFreeze)(HWND, long);
void (CALLBACK *ControlBound)(HWND, long *, long *, long *, long *);
long (CALLBACK *ControlEnable)(HWND, long);
long (CALLBACK *ControlVisible)(HWND, long);
long (CALLBACK *ControlIsVisible)(HWND);
long (CALLBACK *ControlIsEnabled)(HWND);
char * (CALLBACK *ControlGetText)(HWND);
long (CALLBACK *ControlGetTextLen)(HWND);
long (CALLBACK *ControlSetText)(HWND, char *);
long (CALLBACK *ControlGetNotifiedMsg)(long);
HWND (CALLBACK *ControlGetNotifiedhWnd)(long);
long (CALLBACK *ControlGetNotifiedID)(long);
long (CALLBACK *ControlTop)(HWND);
long (CALLBACK *ControlLeft)(HWND);
long (CALLBACK *ControlWidth)(HWND);
long (CALLBACK *ControlHeight)(HWND);
HWND (CALLBACK *ControlGetHwndFromPoint)(void);
long (CALLBACK *ControlGetNotifiedCommand)(long);
long (CALLBACK *ControlGetXMousePos)(long);
long (CALLBACK *ControlGetYMousePos)(long);
HFONT (CALLBACK *ControlGetFont)(HWND);
HICON (CALLBACK *ControlGetIcon)(HWND, long);
long (CALLBACK *ControlGetHotKey)(HWND);
long (CALLBACK *ControlSetFont)(HWND, HFONT);
long (CALLBACK *ControlSetFontNoRedraw)(HWND, HFONT);
long (CALLBACK *ControlIsWindowChild)(HWND);
char * (CALLBACK *ControlGetClassName)(HWND);
long (CALLBACK *ControlSetClassCursor)(HWND, HCURSOR);
long (CALLBACK *ControlGetWindowState)(HWND);
long (CALLBACK *ControlClose)(HWND);
long (CALLBACK *ComDlgChooseColor)(HWND, long *);
char * (CALLBACK *ComDlgGetOpenFileName)(HWND, char *, char *, long);
char * (CALLBACK *ComDlgGetSaveFileName)(HWND, char *, char *);
long (CALLBACK *ComDlgChooseFont)(HWND, char *, long, long, LPLOGFONT, LPCHOOSEFONT);
char * (CALLBACK *ComDlgBrowseForFolder)(HWND, char *);
char * (CALLBACK *ComDlgParseMultiFilesSelection)(char *, long (CALLBACK *)(char *, long), long, long);
long (CALLBACK *WinsockInit)(LPWSADATA, long);
long (CALLBACK *WinsockUnInit)(void);
SOCKET (CALLBACK *SocketCreate)(void);
long (CALLBACK *SocketDestroy)(SOCKET, HWND);
long (CALLBACK *SocketConnect)(SOCKET, LPSOCKADDR_IN, long, HWND, char *, long, long);
long (CALLBACK *SocketGetPort)(SOCKET, LPSOCKADDR_IN);
long (CALLBACK *SocketListen)(SOCKET, HWND, long, long);
SOCKET (CALLBACK *SocketAcceptConnection)(SOCKET, LPSOCKADDR_IN);
long (CALLBACK *SocketSendASCIIDatasCR)(SOCKET, char *);
long (CALLBACK *SocketSendUnknownDatas)(SOCKET, long, long);
long (CALLBACK *SocketGetRevcLen)(SOCKET);
char * (CALLBACK *SocketReceiveASCIIDatas)(SOCKET);
long (CALLBACK *SocketReceiveUnknownDatas)(SOCKET, long *, long);
SOCKET (CALLBACK *FTPInitiatePort)(SOCKET, LPSOCKADDR_IN, HWND, long);
char * (CALLBACK *FTPGetEntryDate)(char *);
char * (CALLBACK *FTPGetEntryFileName)(char *);
char * (CALLBACK *FTPGetEntryFileAttributes)(char *);
char * (CALLBACK *FTPGetEntryFileSize)(char *);
long (CALLBACK *FTPIsEntryDir)(char *);
long (CALLBACK *MiscClipBoardCopyText)(char *);
char * (CALLBACK *MiscClipBoardPasteText)(void);
long (CALLBACK *MiscClipBoardIsEmpty)(void);
void (CALLBACK *MiscShellAddFileToRecents)(char *);
long (CALLBACK *MiscWaitEvents)(HWND, HACCEL, HWND);
long (CALLBACK *MiscMsgBox)(HWND, char *, long);
long (CALLBACK *MiscSendBroadCastMsg)(long);
void (CALLBACK *MiscDoEvents)(HWND,HACCEL,HWND);
HRESULT (CALLBACK *MiscObtainGUID)(LPGUID);
HGLOBAL (CALLBACK *MiscAllocMem)(long);
long (CALLBACK *MiscFreeMem)(HGLOBAL);
void (CALLBACK *MiscCopyMemLoop)(void *, void *, long, long, long);
void (CALLBACK *MiscCopyMemWithOffsets)(void *, void *, long, long, long);
long (CALLBACK *MiscGetOSClass)(void);
long (CALLBACK *MiscObtainExtendedFunctions)(void); /* Reserved for future extensions */
char * (CALLBACK *GetWindowLangGUID)(HWND);
char * (CALLBACK *GetWindowLangInclude)(HWND);
char * (CALLBACK *GetWindowLangDoubleSlash)(HWND);
char * (CALLBACK *GetWindowLangComment)(HWND);
char * (CALLBACK *GetWindowLangMultiComment)(HWND);
char * (CALLBACK *GetWindowLangMultiCommentEnd)(HWND);
char * (CALLBACK *GetWindowLangProc)(HWND);
char * (CALLBACK *GetWindowLangEndp)(HWND);
long (CALLBACK *GetWindowLangProcInterlace)(HWND);
long (CALLBACK *GetWindowLangProcOrphan)(HWND);
char * (CALLBACK *GetWindowLangProcOpenBlock)(HWND);
char * (CALLBACK *GetWindowLangProcCloseBlock)(HWND);
char * (CALLBACK *GetWindowLangFileName)(HWND);
char * (CALLBACK *GetWindowLangIncludeName)(HWND);
char * (CALLBACK *GetWindowLangIncludeNameFoot)(HWND);
char * (CALLBACK *DecodeRelativePaths)(char *);
char * (CALLBACK *RemoveRelativePaths)(char *);
char * (CALLBACK *EncodeRelativePaths)(char *);
void (CALLBACK *RunUserCommand)(long);
void (CALLBACK *RunCommandScript)(char *, long);
long (CALLBACK *RunDOSCmd)(char *, char *, char *, char *);
void (CALLBACK *RunDOSCmdCapture)(char *, char *, char *);
long (CALLBACK *DisplayHelpFile)(char *, char *);
char * (CALLBACK *GetWindowPath)(void);
long (CALLBACK *IsFileWorkSpace)(char *);
long (CALLBACK *MIsFileProject)(char *);
long (CALLBACK *GetCurrentChildState)(void);
HWND (CALLBACK *GotoFileLine)(char *, long, long);
void (CALLBACK *FocusOnFile)(char *, long);
char * (CALLBACK *GetFileNameFromTreeViewItem)(HTREEITEM);
char * (CALLBACK *GetLabelFromTreeViewItem)(HTREEITEM);
long (CALLBACK *OpenUnknownFile)(char *, long);
char * (CALLBACK *HexToDec)(char *);
char * (CALLBACK *DecToHex)(char *);
char * (CALLBACK *DecToBin)(char *);
char * (CALLBACK *HexToBin)(char *);
char * (CALLBACK *BinToDec)(char *);
char * (CALLBACK *BinToHex)(char *);
char * (CALLBACK *HexToFlt)(char *);
char * (CALLBACK *FltToHex)(char *);
char * (CALLBACK *GetProcedureList)(char *);
char * (CALLBACK *GetLineFromFile)(HANDLE, long);
HWND (CALLBACK *CreateNewWindow)(void);
void (CALLBACK *ClearWindow)(HWND);
void (CALLBACK *ReloadWindow)(HWND);
void (CALLBACK *CloseWindow)(HWND);
void (CALLBACK *CloseAllWindows)(void);
void (CALLBACK *SaveAllWindows)(void);
void (CALLBACK *PrintWindow)(HWND, long);
char * (CALLBACK *SaveWindow)(HWND);
void (CALLBACK *Undo)(HWND);
void (CALLBACK *Redo)(HWND);
void (CALLBACK *Cut)(HWND);
void (CALLBACK *Copy)(HWND);
long (CALLBACK *CopyFilePathName)(HWND);
long (CALLBACK *CopyEntireText)(HWND);
void (CALLBACK *Paste)(HWND);
void (CALLBACK *DeleteSel)(HWND);
void (CALLBACK *DeleteLine)(HWND);
void (CALLBACK *DeleteToStart)(HWND);
void (CALLBACK *DeleteToEnd)(HWND);
void (CALLBACK *SelectLine)(HWND);
void (CALLBACK *SelectAll)(HWND);
long (CALLBACK *SelectProc)(HWND);
void (CALLBACK *FindNext)(HWND);
void (CALLBACK *FindPrevious)(HWND);
void (CALLBACK *FindSelection)(HWND);
void (CALLBACK *GotoTop)(HWND);
void (CALLBACK *GotoBottom)(HWND);
void (CALLBACK *GotoLine)(HWND, long);
void (CALLBACK *GotoMatchingBracket)(HWND);
void (CALLBACK *GotoPrevWord)(HWND, long);
void (CALLBACK *GotoNextWord)(HWND, long);
void (CALLBACK *GotoPrevLetter)(HWND, long);
void (CALLBACK *GotoNextLetter)(HWND, long);
void (CALLBACK *GotoPrevLine)(HWND, long);
void (CALLBACK *GotoNextLine)(HWND, long);
void (CALLBACK *GotoPrevPage)(HWND, long);
void (CALLBACK *GotoNextPage)(HWND, long);
void (CALLBACK *GetMiniChildStruct)(HWND, LPMINICHILDDAT);
char * (CALLBACK *GetIniFilePathName)(long);
char * (CALLBACK *GetQuickDirectory)(long);
void (CALLBACK *GetContext)(LPADDINCONTEXT);
char * (CALLBACK *GetcurrentLine)(HWND);
char * (CALLBACK *SelectCurrentWord)(HWND);
char * (CALLBACK *GetCurrentWord)(HWND);
void (CALLBACK *InsertText)(HWND, char *);
void (CALLBACK *InsertLine)(HWND, char *);
void (CALLBACK *InsertLines)(HWND, long);
void (CALLBACK *SetText)(HWND, char *);
long (CALLBACK *GetCaretRealXCoordinate)(HWND);
long (CALLBACK *GetCaretRealYCoordinate)(HWND);
void (CALLBACK *SetFocusInsideWindow)(HWND);
void (CALLBACK *RestoreMDIFromSysTray)(void);
long (CALLBACK *InstallHookProc)(long, long);
void (CALLBACK *UnInstallHookProc)(long, long, long);
long (CALLBACK *GetCurrentLineNumber)(HWND);
long (CALLBACK *GetCurrentColNumber)(HWND);
char * (CALLBACK *GetCurrentLineText)(HWND);
char * (CALLBACK *GetLineText)(HWND, long);
void (CALLBACK *WriteToOutputBox)(char *);
void (CALLBACK *EnumSourceWindows)(long);
void (CALLBACK *AddInKillZombie)(long);
long (CALLBACK *SpAddInIsAvailable)(char *);
char * (CALLBACK *MiscInputBox)(HWND, char *, long, char *, long, long, char *);
long (CALLBACK *IsChildReadOnly)(HWND);
void (CALLBACK *SetChildReadOnly)(HWND, long);
HWND (CALLBACK *CreateCustomChildDialog)(char *, void (CALLBACK *)(HWND), WNDPROC);
HWND (CALLBACK *CreateCodeMax)(long, long, long, long, HWND, void (CALLBACK *)(HWND));
} CHROMATICLIB, *LPCHROMATICLIB;

#endif
