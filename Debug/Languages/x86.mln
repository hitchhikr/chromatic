; Chromatic language definition file
; Do NOT edit this file manually
; unless you know what you're doing !!!
; (C) 2001-2010 Franck Charlet.

[LangSpec]
LangName=X86 Assembler
LangCopyright=Franck Charlet.
LangComment=MASM/TASM/NASM/FASM/GOASM assemblers.
CaseSensitive=0
SingleComment=;
MultiLinePrefix=comment
MultiLineComment1=\ ~ ®
MultiLineComment2=\ ~ ®
ScopeKeyWords1=.if .elseif elseif elseife elseifb elseifnb elseifdef elseifndef elseifdifi elseifidni .else .while .repeat .repeat while repeat rept for forc ifdifi if else ifb ife ifctx ifdef ifid ifidn ifidni ifndef ifnidni ifnum ifstr #if #elif #else #ifdef #ifndef %if %elif %else %ifctx %elifctx %ifctx %elifnctx %ifidn %elifidn %ifidni %elifidni %ifnidni %elifnidni %ifdef %elifdef %ifid %ifndef %ifnum %ifstr %macro %rep elif else ifctx elifctx ifctx elifnctx ifidn elifidn ifidni elifidni ifnidni elifnidni ifdef elifdef ifid ifndef elifndef ifnum ifstr macro rept rep pushcontext ifnb { repeat virtual
ScopeKeyWords2=.elseif elseif elseife elseifb elseifnb elseifdef elseifndef elseifdifi elseifidni .else .endif .endw .until .untilcxz endm endm endm endm endm endif else endif endif endif endif endif endif endif endif endif endif endif endif #elif #else #endif #endif #endif %elif %else %endif %elifctx %endif %elifnctx %endif %elifidn %endif %elifidni %endif %elifnidni %endif %elifdef %endif %endif %endif %endif %endif %endmacro %endrep else endif elifctx endif elifnctx endif elifidn endif elifidni endif elifnidni endif elifdef endif endif elifndef endif endif endif endmacro endr endrep popcontext endif } end end
StringsDelimiters=" '
EscapeChar=
TerminatorChar=\
Style=0
GUIDStyle={0%0H,0%1H,0%2H,{0%3H,0%4H,0%5H,0%6H,0%7H,0%8H,0%9H,0%AH}}
IncludeStyle=include %1
IncludeName=include
IncludeNameFoot=
DoubleSlash=0
ProcWords=proc
EndpWords=endp
InterlacedProc=0
AllowOrphanBlock=0
HighlightNbrs=1
HexType=0%1h
BinType=0%1b

; --- Keywords
ColorAHelp=[MAINHELPDIR]\x86eas.hlp
ColorA000=aaa aad aam aas adc adcl add addb addl addpd addps addsd addss addw and andb andl andnpd andnps andpd andps andw arpl
ColorA001=bound bsf bsfl bsr bswap bt btc btr btl btrl bts btsl bswapl
ColorA002=call cbw cdq clc cld clflush cli clts cmc cmova cmovae cmovb cmovbe cmovc cmove cmovg cmovge comisd comiss cmovl cmovle cmovna cmovnae cmovnb cmovnbe cmovnc cmovne cmovng cmovnge cmovnl cmovnle cmovno cmovnp cmovns cmovnz cmovo cmovp cmovpe cmovpo cmovs cmovz cmp cmp_ps_ea cmp_ps_le cmp_ps_lt cmp_ps_neq cmp_ps_nle cmp_ps_nlt cmpb cmpccps cmpccss cmpl cmppd cmpeqpd cmpeqsd cmpltpd cmplesd cmpltsd cmplepd cmpunordpd cmpneqpd cmpnltpd cmpnlepd cmpordpd cmpps cmpeqps cmpltps cmpleps cmpneqsd cmpnlesd cmpnltsd cmpordsd cmpeqss cmpltss cmpless cmpunordss cmpneqss cmpnltss cmpnless cmpordss cmpunordps cmpunordsd cmpneqps cmpnltps cmpnleps cmpordps cmppsea cmppsle cmppslt cmppsneq cmppsnle cmppsnlt cmps cmpss cmpsb cmpsd cmpsw cmpw cmpxchg cmpxchg486 cmpxchg8b comiss cpuid cvtdq2pd cvtdq2ps cvtpd2dq cvtpd2pi cvtpd2ps cvtpi2pd cvtpi2ps cvtps2pi cvtsi2ss cvtss2si cvtps2dq cvtps2pd cvttps2pi cvttss2si cvtsd2si cvtsd2ss cvtsi2sd cvtsi2ss cvtss2sd cvtss2si cvttpd2pi cvttpd2dq cvttps2dq cvttps2pi cvttsd2si cvttss2si cwd cwde
ColorA003=daa das db dd dec decl df div divl divpd divps divsd divss divw dp dq dt du dw
ColorA004=emms enter
ColorA005=f2xm1 fabs fadd faddp fbld fbstp fchs fclex fcmovb fcmovbe fcmove fcmovnb fcmovnbe fcmovne fcmovnu fcmovu fcom fcomi fcomip fcoml fcomp fcompp fcos fdecstp fdisi fndisi feni fneni fdiv fdivp fdivr fdivrp ffree fiadd fiaddl ficom ficomp fidiv fidivr fild fildl fildll fimul fimull fincstp finit fist fistp fistpl fistpll fisub fisubr fld fld1 fldcw fldenv fldl fldl2e fldl2t fldlg2 fldln2 fldpi flds fldz fmul fmulp fnclex fninit fnop fnsave fnstcw fnstenv fnstsw fpatan fprem fprem1 fptan frndint frstor fsave fscale fsetpm fsin fsincos fsqrt fst fstl fstcw fstenv fstp fstpl fstsw fsub fsubp fsubr fsubrp ftst fucom fucomi fucomip fucomp fucompp fwait fxam fxch fxrstor fxsave fxtract fyl2x fyl2xp1
ColorA006=hlt
ColorA007=ibts icebp idiv imul in inb inc incl ins insb insd insw int int0 int01 int1 int3 into invd invlpg iret iretw iretd
ColorA008=ja jae jb jbe jc jcxz je jecxz jg jge jl jle jmp jna jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz jo jp jpe jpo js jz
ColorA009=lahf lar ldmxcsr lds lea leal leave les lfence lfs lgdt lgs lidt lldt lmsw loadall loadall286 lock lods lodsb lodsd lodsw loop loope loopne loopnz loopz lsl lss ltext ltr
ColorA010=maskmovdqu maskmovq maxpd maxps maxsd maxss mfence minpd minps minsd minss mov movapd movaps movb movd movdqa movdqu movdq2q movhlps movhpd movhps movl movlhps movlpd movlps movmskpd movmskps movntdq movnti movntpd movntps movntq movq movq2dq movs movsb movsbl movsd movsl movss movsw movswl movsx movupd movups movzb movzbl movzwl movzx movw mul mull mulpd mulps mulsd mulss
ColorA011=neg negl nop not notb notl
ColorA012=or orb orl ord orpd orps orw out outb outs outsb outsd outsw
ColorA013=pack packssdw packsswb packuswb padd paddb paddw paddd paddq paddsb paddsw paddusb paddusw paddsiw pand pandn pause paveb pavgb pavgw pavgusb pcmp pcmpeqb pcmpeqw pcmpeqd pcmpgtb pcmpgtw pcmpgtd pdistib pextrw pinsrw pf2id pfacc pfadd pfcmpeq pfcmpge pfcmpgt pfmax pfmin pfmul pfrcp pfrcpit1 pfrcpit2 pfrsqit1 pfrsqrt pfsub pfsubr pi2fd pisrw pmachriw pmadd pmaddwd pmagw pmaxsw pmaxub pminsw pminub pmul pmulhrw pmulhriw pmulhuw pmulhw pmullw pmuludq pmvzb pmvnzb pmvlzb pmvgezb pop popa popaw popad popf popfl popfd popfw popl popw por prefetchnta prefetcht0 prefetcht1 prefetcht2 psadbw pshufd pshufhw pshuflw pshufw psll psllw pslldq pslld psllq psra psraw psrad psrl psrlw psrldq psrld psrlq psub psubb psubw psubq psubd psubsb psubsw psubusb psubusw psubsiw punpck punpckhbw punpckhwd punpckhdq punpckhqdq punpcklbw punpcklwd punpckldq punpcklqdq push pusha pushad pushaw pushf pushfd pushfl pushfw pushl pushw pxor pmovmskb
ColorA014=rb rcl rcpps rcpss rcr rd rdmsr rdpmc rdtcs rdtsc rep repe repne repnz repz ret retf retn rf rol roll ror rorl rp rq rsm rsqrtps rsqrtss rt rw
ColorA015=sahf sal salc sall sar sarl sbb sbbl scas scasb scasd scasw seta setae setb setbe setc sete setg setge setl setle setna setnae setnb setnbe setnc setne setng setnge setnl setnle setno setnp setns setnz seto setp setpe setpo sets setz sfence sgdt shl shlb shld shldl shll shr shrb shrd shrdl shrl shrw shufps sidt sldt smi smsw spence sqrtpd sqrtps sqrtsd sqrtss stc std sti stmxcsr stos stosb stosd stosl stosw str sub subb subl subpd subps subsd subss subw shufpd shufps sysenter sysexit
ColorA016=test testb testl
ColorA017=ucomisd ucomiss ud2 umov unord unpckhpd unpckhps unpcklpd unpcklps
ColorA018=verr verw
ColorA019=wait wbinvd wrmsr
ColorA020=xadd xbts xchg xchgb xchgl xlat xlatb xor xorb xorl xorpd xorps

; --- Directives
ColorBHelp=[HELPDIR]\Masm32.hlp
ColorB000=__nasm_major__ __nasm_minor__ __file__ __line__ __sect__
ColorB001=#define #include #undef
ColorB002==default
ColorB003=@@ @argi @argver @B @catstr @curseg @filename @code @codesize @datasize @const @data @data? @F @fardata @fardata? @instr @stack @sizestr @substr
ColorB004=%assign %clear %define %error %exitrep %iassign %idefine %imacro %include %out %pop %push %repl %rotate %title %undef
ColorB005=..start .186 .286 .286c .286p .287 .386 .386p .387 .486 .486p .586 .586p .686 .686p .8086 .8087 .alpha .ascii .break .bss .code .comm .const .continue .cref .data .data? .def .err .err1 .err2 .errb .errdef .errdif .erre .erridn .errnb .errndef .errnz .fardata .fardata? .fill .globl .lall .lfcond .list .listif .listmacro .listmacroall .long .mmx .model .msfloat .nlist .nocref .nolist .nolistif .nolistmacro .radix .sall .seq .sfcond .stack .text .tfcond .type .xall .xcref .xlist .xmm .k3d
ColorB006=absolute addr all alloc align alignb assign assume assumes at
ColorB007=basic begin bits block bss byte
ColorB008=c casemap char class clear code codeseg comm common compact console cpu
ColorB009=data dataseg define dgroup discardable die display dll dosseg dotname dup dword
ColorB010=echo emulator endp ends endstruc entry epilogue equ error even exec exitm export exports expr16 expr32 extrn extern externdef executable elf
ColorB011=FALSE far farvar fixups flat format fortran fword
ColorB012=global goto group gui
ColorB013=high highword huge heap
ColorB014=iassign ideal idefine iend import incbin include includelib info invoke irp irpc istruc
ColorB015=jumps
ColorB016=label language large length lengthof library listing ljmp local locals low lowword lowercase lroffset
ColorB017=mask medium mod model mz
ColorB018=name near nearvar nexec noalloc nobits nodata nodotname noemulator nojumps nokeyword noljmp none noreadonly nosignextend noscoped nothing notpublic NULL notpageable
ColorB019=offset opattr option org overlay
ColorB020=p386 p386n p386p p486 p486n p486p p586 p586n p586p p686 p686n p686p page para parm pascal PE pmmx private proc prologue progbits proto ptr public purge
ColorB021=qword
ColorB022=radix readable readonly real4 real8 real10 record repl req resb resd resident resq rest resw retc return rotate rva reverse
ColorB023=sbyte sdword section scoped seg segment short size sizeof small stack stdcall struc struct subttl sword syscall shareable
ColorB024=tbyte textequ this times tiny text title TRUE tword type typedef
ColorB025=udataseg undef union uppercase use16 use32 uses
ColorB026=value vararg
ColorB027=width word write wrt
ColorB028=xmmword

; --- Registers
ColorCHelp=
ColorC000=%al %ah %ax %bl %bh %bp %bx %cl %ch %cr0 %cr2 %cr3 %cr4 %cs %cx %dl %dh %di %dr0 %dr1 %dr2 %dr3 %dr6 %dr7 %ds %dx %eax %ebp %ebx %ecx %edi %edx %eip %es %esi %esp %fs %gs %ip %mm0 %mm1 %mm2 %mm3 %mm4 %mm5 %mm6 %mm7 %si %sp %ss %st0 %st1 %st2 %st3 %st4 %st5 %st6 %st7 %st(0) %st(1) %st(2) %st(3) %st(4) %st(5) %st(6) %st(7) %tr4 %tr5 %tr6 %tr7 %xmm0 %xmm1 %xmm2 %xmm3 %xmm4 %xmm5 %xmm6 %xmm7
ColorC001=al ah ax
ColorC002=bl bh bp bx
ColorC003=cl ch cr0 cr2 cr3 cr4 cs cx
ColorC004=dl dh di dr0 dr1 dr2 dr3 dr6 dr7 ds dx
ColorC005=eax ebp ebx ecx edi edx eip es esi esp
ColorC006=fs
ColorC007=gs
ColorC008=ip
ColorC009=mm0 mm1 mm2 mm3 mm4 mm5 mm6 mm7 mm(0) mm(1) mm(2) mm(3) mm(4) mm(5) mm(6) mm(7)
ColorC010=si sp ss st0 st1 st2 st3 st4 st5 st6 st7 st(0) st(1) st(2) st(3) st(4) st(5) st(6) st(7)
ColorC011=tr4 tr5 tr6 tr7
ColorC012=xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7 xmm(0) xmm(1) xmm(2) xmm(3) xmm(4) xmm(5) xmm(6) xmm(7)

; --- Extra functions
ColorDHelp=[HELPDIR]\Masmlib.hlp
ColorD000=AboutBox ArgCL ArgCLC a2dw atodw 
ColorD001=BinSearch BitmapFromFile BitmapFromMemory BitmapFromResource BMBinSearch BMHBinsearch BmpButton BrowseForFolder
ColorD002=catstr characteristics checked circle ClearScreen cmpsi ColorDialog CombSortA CombSortD
ColorD003=DisplayBmp DisplayIcon dw2a dw2hex dwtoa
ColorD004=exist
ColorD005=filesize FloatToStr FloatToStr2 FontDialog Frame3D FrameCtrl FrameGrp FrameWindow Free
ColorD006=generic GetAppPath GetCL GetErrDescription GetFile GetIP GetPathOnly GetPercent GetTextInput grayed
ColorD007=hilite htodw
ColorD008=iFree iMalloc InString IntDiv IntMul IntSqrt IPtoString
ColorD009=lcase line lnstr LoadList locate lstr ltrim
ColorD010=MakeIP MemCopy memfill menubreak midstr
ColorD011=NameFromPath nrQsortA nrQsortD nrandom nseed
ColorD012=ofCallBack
ColorD013=PageSetupDialog PrintDialog
ColorD014=Read_File_In revstr RichEd1 RichEd2 RolData RorData rstr rtrim
ColorD015=SBMBinSearch separator SetBMcolor sfCallBack shell sizestr SnapDead SnapFreeze SnapOutput SnapSaveFile SnapShowHex16 SnapShowHex32 SnapShowHex8 SnapShowMem SnapState SnapTimer StdIn StdOut StripLF StripRangeI StripRangeX StrLen StrToFloat substr szCatStr szLeft szMid szMultiCat szRight
ColorD016=trim
ColorD017=ucase udw2str ustr2dw
ColorD018=version VerticalTile
ColorD019=WordCount Write_To_Disk
ColorD020=XorData

; --- Separators
ColorEHelp=
ColorE000=, [ ] ( ) : = ## < > != >= <= || | && & ! + - / * eq ne gt lt ge le carry? overflow? parity? sign? zero? { }

; --- Extra keywords 1
ColorFHelp=
ColorF000=

; --- Extra keywords 2
ColorGHelp=
ColorG000=

; --- Extra keywords 3
ColorHHelp=
ColorH000=

[Scripts]
ScriptName000=Create INCLUDE statement from file
ScriptData000=[LANGSCRIPTSDIR]\Asm_IncludeFromFile.lua
ScriptName001=Create INCLUDELIB statement from file
ScriptData001=[LANGSCRIPTSDIR]\Asm_IncludeLibFromFile.lua
ScriptName002=-
ScriptData002=
ScriptName003=Create PROC/ENDP from current selection
ScriptData003=[LANGSCRIPTSDIR]\Asm_ProcEndpFromSel.lua
ScriptName004=Create MASM IF statement from current selection
ScriptData004=[LANGSCRIPTSDIR]\Asm_MasmIfFromSel.lua
ScriptName005=-
ScriptData005=
ScriptName006=Insert a selected COLOR as DECIMAL
ScriptData006=[LANGSCRIPTSDIR]\Asm_DecimalColor.lua
ScriptName007=Insert a selected COLOR as HEXADECIMAL
ScriptData007=[LANGSCRIPTSDIR]\Asm_HexadecimalColor.lua
